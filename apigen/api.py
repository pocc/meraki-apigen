"""All of the API call JSONs"""
api_json = [{'http_method': 'GET', 'path': '/organizations/[organization_id]/admins', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins'", 'sample_resp': '[\n  {\n    "id": "212406",\n    "name": "Miles Meraki",\n    "email": "miles@meraki.com",\n    "orgAccess": "none",\n    "tags": [\n      {\n        "tag": "west",\n        "access": "read-only"\n      }\n    ],\n    "networks": [\n      {\n        "id": "N_24329156",\n        "access": "full"\n      }\n    ]\n  }\n]', 'description': 'List the dashboard administrators in this organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/organizations/[organization_id]/admins', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"Miles Meraki","email":"miles@meraki.com","orgAccess":"none","tags":[{"tag":"west","access":"read-only"}]}\' \'https://api.meraki.com/api/v0/organizations/[organization_id]/admins\'', 'sample_resp': '{\n  "id": "212406",\n  "name": "Miles Meraki",\n  "email": "miles@meraki.com",\n  "orgAccess": "none",\n  "tags": [\n    {\n      "tag": "west",\n      "access": "read-only"\n    }\n  ],\n  "networks": [\n    {\n      "id": "N_24329156",\n      "access": "full"\n    }\n  ]\n}', 'description': 'Create a new dashboard administrator', 'params': [{'name': 'email', 'description': 'The email of the dashboard administrator. This attribute can not be updated.', 'is_array': False}, {'name': 'name', 'description': 'The name of the dashboard administrator', 'is_array': False}, {'name': 'orgAccess', 'description': 'The privilege of the dashboard administrator on the organization (full, read-only, none)', 'is_array': False}, {'name': 'tags', 'description': 'The list of tags that the dashboard administrator has privileges on', 'is_array': True, 'params': [{'name': 'tag', 'description': 'The name of the tag', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the dashboard administrator on the tag', 'is_array': False}]}, {'name': 'networks', 'description': 'The list of networks that the dashboard administrator has privileges on', 'is_array': True, 'params': [{'name': 'id', 'description': 'The network ID', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the dashboard administrator on the network', 'is_array': False}]}], 'successful_http_status': 201},
{'http_method': 'PUT', 'path': '/organizations/[organization_id]/admins/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"Miles Meraki","email":"miles@meraki.com","orgAccess":"none","tags":[{"tag":"west","access":"read-only"}]}\' \'https://api.meraki.com/api/v0/organizations/[organization_id]/admins/[id]\'', 'sample_resp': '{\n  "id": "212406",\n  "name": "Miles Meraki",\n  "email": "miles@meraki.com",\n  "orgAccess": "none",\n  "tags": [\n    {\n      "tag": "west",\n      "access": "read-only"\n    }\n  ],\n  "networks": [\n    {\n      "id": "N_24329156",\n      "access": "full"\n    }\n  ]\n}', 'description': 'Update an administrator', 'params': [{'name': 'email', 'description': 'The email of the dashboard administrator. This attribute can not be updated.', 'is_array': False}, {'name': 'name', 'description': 'The name of the dashboard administrator', 'is_array': False}, {'name': 'orgAccess', 'description': 'The privilege of the dashboard administrator on the organization (full, read-only, none)', 'is_array': False}, {'name': 'tags', 'description': 'The list of tags that the dashboard administrator has privileges on', 'is_array': True, 'params': [{'name': 'tag', 'description': 'The name of the tag', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the dashboard administrator on the tag', 'is_array': False}]}, {'name': 'networks', 'description': 'The list of networks that the dashboard administrator has privileges on', 'is_array': True, 'params': [{'name': 'id', 'description': 'The network ID', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the dashboard administrator on the network', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/organizations/[organization_id]/admins/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins/[id]'", 'sample_resp': '(empty)', 'description': 'Revoke all access for a dashboard administrator within this organization', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/alertSettings', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'", 'sample_resp': '{\n  "defaultDestinations": {\n    "emails": [\n      "miles@meraki.com"\n    ],\n    "allAdmins": true,\n    "snmp": true\n  },\n  "alerts": [\n    {\n      "type": "gatewayDown",\n      "enabled": true,\n      "alertDestinations": {\n        "emails": [\n          "miles@meraki.com"\n        ],\n        "allAdmins": false,\n        "snmp": false\n      },\n      "filters": {\n        "timeout": 60\n      }\n    }\n  ]\n}', 'description': 'Return the alert configuration for this network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/alertSettings', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"defaultDestinations":{"emails":["miles@meraki.com"],"allAdmins":true,"snmp":true},"alerts":[{"type":"gatewayDown","enabled":true,"alertDestinations":{"emails":["miles@meraki.com"],"allAdmins":false,"snmp":false},"filters":{"timeout":60}}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings\'', 'sample_resp': '{\n  "defaultDestinations": {\n    "emails": [\n      "miles@meraki.com"\n    ],\n    "allAdmins": true,\n    "snmp": true\n  },\n  "alerts": [\n    {\n      "type": "gatewayDown",\n      "enabled": true,\n      "alertDestinations": {\n        "emails": [\n          "miles@meraki.com"\n        ],\n        "allAdmins": false,\n        "snmp": false\n      },\n      "filters": {\n        "timeout": 60\n      }\n    }\n  ]\n}', 'description': 'Update the alert configuration for this network', 'params': [{'name': 'defaultDestinations', 'description': 'The network_wide destinations for all alerts on the network.', 'is_array': False, 'params': [{'name': 'emails', 'description': 'A list of emails that will recieve the alert(s).', 'is_array': False}, {'name': 'allAdmins', 'description': 'If true, then all network admins will receive emails.', 'is_array': False}, {'name': 'snmp', 'description': 'If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.', 'is_array': False}]}, {'name': 'alerts', 'description': 'Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.', 'is_array': True, 'params': [{'name': 'type', 'description': 'The type of alert', 'is_array': False}, {'name': 'enabled', 'description': 'A boolean depicting if the alert is turned on or off', 'is_array': False}, {'name': 'alertDestinations', 'description': 'A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.', 'is_array': False}, {'name': 'filters', 'description': 'A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/camera/analytics/zones', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/zones'", 'sample_resp': '[\n  {\n    "id": "0",\n    "type": "occupancy",\n    "label": "Full Frame"\n  }\n]', 'description': 'Returns all configured analytic zones for this camera', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/camera/analytics/recent', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/recent'", 'sample_resp': '[\n  {\n    "startTs": "2018-08-15T18:32:38.123Z",\n    "endTs": "2018-08-15T18:33:38.123Z",\n    "zoneId": 0,\n    "entrances": 10,\n    "averageCount": 2.54\n  }\n]', 'description': 'Returns most recent record for analytics zones', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/camera/analytics/live', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/live'", 'sample_resp': '[\n  {\n    "ts": "2018-08-15T18:32:38.123Z",\n    "zones": {\n      "0": {\n        "person": 0\n      }\n    }\n  }\n]', 'description': 'Returns live state from camera of analytics zones', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'description': 'Returns an overview of aggregate analytics data for a timespan', 'path': '/devices/{serial}/camera/analytics/overview', 'alternate_path': None, 'successful_http_status': 200, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/overview'", 'sample_resp': '[\n  {\n    "startTs": "2018-08-15T18:32:38.123Z",\n    "endTs": "2018-08-15T18:33:38.123Z",\n    "zoneId": 0,\n    "entrances": 254,\n    "averageCount": 5\n  }\n]'},
{'http_method': 'GET', 'description': 'Return historical records for analytic zones', 'path': '/devices/{serial}/camera/analytics/zones/{zoneId}/history', 'alternate_path': None, 'successful_http_status': 200, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/zones/{zoneId}/history'", 'sample_resp': '[\n  {\n    "startTs": "2018-08-15T18:32:38.123Z",\n    "endTs": "2018-08-15T18:33:38.123Z",\n    "entrances": 5,\n    "averageCount": 1.5\n  }\n]'},
{'http_method': 'GET', 'path': '/networks/[networkId]/bluetoothClients', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/bluetoothClients?timespan=7200'", 'sample_resp': '[\n  {\n    "mac": "00:11:22:33:44:55",\n    "networkId": "N_24329156"\n  }\n]', 'description': 'List the Bluetooth clients seen by APs in this network', 'params': [{'name': 'timespan', 'description': 'The timespan, in seconds, used to look back from now for bluetooth clients', 'is_array': False}, {'name': 'includeConnectivityHistory', 'description': 'Include the connectivity history for this client', 'is_array': False}, {'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/bluetoothClients/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/bluetoothClients/[id]'", 'sample_resp': '{\n  "mac": "00:11:22:33:44:55",\n  "networkId": "N_24329156"\n}', 'description': 'Return a Bluetooth client', 'params': [{'name': 'includeConnectivityHistory', 'description': 'Include the connectivity history for this client', 'is_array': False}, {'name': 'connectivityHistoryTimespan', 'description': 'The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/cameras/[serial]/videoLink', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/cameras/[serial]/videoLink'", 'sample_resp': '{\n  "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"\n}', 'description': 'Returns video link for the specified camera. If a timestamp supplied, it links to that time.', 'params': [{'name': 'timestamp', 'description': 'The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds).', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/clients', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/clients?timespan=7200'", 'sample_resp': '[\n  {\n    "usage": {\n      "sent": 138.0,\n      "recv": 61.0\n    },\n    "id": "k74272e",\n    "description": "Miles\'s phone",\n    "mdnsName": "Miles\'s phone",\n    "dhcpHostname": "MilesPhone",\n    "mac": "00:11:22:33:44:55",\n    "ip": "1.2.3.4",\n    "vlan": "",\n    "switchport": null\n  }\n]', 'description': 'List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.', 'params': [{'name': 'timespan', 'description': 'The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[id_or_mac_or_ip]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]'", 'sample_resp': '{\n  "id": "k74272e",\n  "description": "Miles\'s phone",\n  "mdnsName": "Miles\'s phone",\n  "dhcpHostname": "MilesPhone",\n  "mac": "00:11:22:33:44:55",\n  "ip": "1.2.3.4",\n  "vlan": "255",\n  "switchport": null,\n  "ip6": "",\n  "firstSeen": 1518365681,\n  "lastSeen": 1526087474,\n  "manufacturer": "Apple",\n  "os": "iOS",\n  "user": "null",\n  "ssid": "My SSID",\n  "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",\n  "smInstalled": true,\n  "recentDeviceMac": "00:11:22:33:44:55",\n  "clientVpnConnections": [\n    {\n      "remoteIp": "1.2.3.4",\n      "connectedAt": 1522613355,\n      "disconnectedAt": 1522613360\n    }\n  ],\n  "lldp": [\n    [\n      "System name",\n      "Some system name"\n    ],\n    [\n      "System description",\n      "Some system description"\n    ],\n    [\n      "Port ID",\n      "1"\n    ],\n    [\n      "Chassis ID",\n      "00:18:0a:00:00:00"\n    ],\n    [\n      "Port description",\n      "eth0"\n    ],\n    [\n      "System capabilities",\n      "Two-port MAC Relay"\n    ]\n  ],\n  "cdp": null\n}', 'description': 'Return the client associated with the given identifier. This endpoint will lookup by client ID or either the MAC or IP depending on whether the network uses Track-by-IP.', 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/clients/provision', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"mac":"00:11:22:33:44:55","name":"Miles\'s phone","devicePolicy":"Group policy","groupPolicyId":"101"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/clients/provision\'', 'sample_resp': '{\n  "mac": "00:11:22:33:44:55",\n  "clientId": "k74272e",\n  "name": "Miles\'s phone",\n  "devicePolicy": "Group policy",\n  "groupPolicyId": "101"\n}', 'description': 'Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.', 'params': [{'name': 'mac', 'description': 'The MAC address of the client. Required.', 'is_array': False}, {'name': 'name', 'description': 'The display name for the client. Optional. Limited to 255 bytes.', 'is_array': False}, {'name': 'devicePolicy', 'description': 'The policy to apply to the specified client. Can be Whitelisted, Blocked, Normal, and Group policy. Required.', 'is_array': False}, {'name': 'groupPolicyId', 'description': 'The ID of the desired group policy to apply to the client. Required if \'devicePolicy\' is set to "Group policy". Otherwise this is ignored.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[id_or_mac_or_ip]/usageHistory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/usageHistory'", 'sample_resp': '[\n  {\n    "sent": 500,\n    "received": 680,\n    "ts": 1518365681\n  }\n]', 'description': "Return the client's daily usage history. Usage data is in kilobytes.", 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[id_or_mac_or_ip]/trafficHistory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/trafficHistory'", 'sample_resp': '[\n  {\n    "ts": 1518365681,\n    "application": "Google",\n    "destination": "www.google.com",\n    "protocol": "UDP",\n    "port": 443,\n    "recv": 383,\n    "sent": 56,\n    "numFlows": 5,\n    "activeSeconds": 240\n  }\n]', 'description': "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page.", 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[id_or_mac_or_ip]/events', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/events'", 'sample_resp': '[\n  {\n    "deviceSerial": "Q234-ABCD-5678",\n    "occurredAt": 1518365681,\n    "type": "l3roaming_assoc_start",\n    "details": {\n      "vap": "1",\n      "on_packet": "true"\n    }\n  }\n]', 'description': 'Return the events associated with this client.', 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[id_or_mac_or_ip]/latencyHistory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/latencyHistory?timespan=7200'", 'sample_resp': '(empty)', 'description': 'Return the latency history for a client. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.', 'params': [{'name': 'timespan', 'description': 'The timespan in seconds for the data', 'is_array': False}, {'name': 't0', 'description': 'The start time, in seconds from epoch, for the data', 'is_array': False}, {'name': 't1', 'description': 'The end time, in seconds from epoch, for the data', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[mac]/policy', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy?timespan=7200'", 'sample_resp': '{\n  "mac": "00:11:22:33:44:55",\n  "type": "Group policy",\n  "groupPolicyId": "101"\n}', 'description': 'Return the policy assigned to a client on the network.', 'params': [{'name': 'timespan', 'description': 'The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/clients/[mac]/policy', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"mac":"00:11:22:33:44:55","type":"Group policy","groupPolicyId":"101"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy\'', 'sample_resp': '{\n  "mac": "00:11:22:33:44:55",\n  "type": "Group policy",\n  "groupPolicyId": "101"\n}', 'description': 'Update the policy assigned to a client on the network.', 'params': [{'name': 'devicePolicy', 'description': 'The group policy (Whitelisted, Blocked, Normal, Group policy)', 'is_array': False}, {'name': 'groupPolicyId', 'description': "[optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.", 'is_array': False}, {'name': 'timespan', 'description': 'The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/clients/[mac]/splashAuthorizationStatus', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus'", 'sample_resp': '{\n  "ssids": {\n    "0": {\n      "isAuthorized": true,\n      "authorizedAt": "2017-07-19 16:24:13 UTC",\n      "expiresAt": "2017-07-20 16:24:13 UTC"\n    },\n    "2": {\n      "isAuthorized": false\n    }\n  }\n}', 'description': "Return the splash authorization for a client, for each SSID they've associated with through splash.", 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[id]/clients/[mac]/splashAuthorizationStatus', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"ssids":{"0":{"isAuthorized":true,"authorizedAt":"2017-07-19 16:24:13 UTC","expiresAt":"2017-07-20 16:24:13 UTC"},"2":{"isAuthorized":false}}}\' \'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus\'', 'sample_resp': '{\n  "ssids": {\n    "0": {\n      "isAuthorized": true,\n      "authorizedAt": "2017-07-19 16:24:13 UTC",\n      "expiresAt": "2017-07-20 16:24:13 UTC"\n    },\n    "2": {\n      "isAuthorized": false\n    }\n  }\n}', 'description': "Update a client's splash authorization.", 'params': [{'name': 'ssids', 'description': "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.", 'is_array': False, 'params': [{'name': 'isAuthorized', 'description': 'New authorization status for SSID (true, false).', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[organizationId]/configTemplates', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates'", 'sample_resp': '[\n  {\n    "id": "N_24329156",\n    "name": "My config template"\n  }\n]', 'description': 'List the configuration templates for this organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/organizations/[organizationId]/configTemplates/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates/[id]'", 'sample_resp': '(empty)', 'description': 'Remove a configuration template', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices'", 'sample_resp': '[\n  {\n    "name": "My AP",\n    "lat": 37.4180951010362,\n    "lng": -122.098531723022,\n    "serial": "Q234-ABCD-5678",\n    "mac": "00:11:22:33:44:55",\n    "model": "MR34",\n    "address": "1600 Pennsylvania Ave",\n    "notes": "My AP\'s note",\n    "lanIp": "1.2.3.4",\n    "tags": " recently-added ",\n    "networkId": "N_24329156",\n    "beaconIdParams": {\n      "uuid": "00000000-0000-0000-0000-000000000000",\n      "major": 5,\n      "minor": 3\n    }\n  }\n]', 'description': 'List the devices in a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]'", 'sample_resp': '{\n  "name": "My AP",\n  "lat": 37.4180951010362,\n  "lng": -122.098531723022,\n  "serial": "Q234-ABCD-5678",\n  "mac": "00:11:22:33:44:55",\n  "model": "MR34",\n  "address": "1600 Pennsylvania Ave",\n  "notes": "My AP\'s note",\n  "lanIp": "1.2.3.4",\n  "tags": " recently-added ",\n  "networkId": "N_24329156",\n  "beaconIdParams": {\n    "uuid": "00000000-0000-0000-0000-000000000000",\n    "major": 5,\n    "minor": 3\n  }\n}', 'description': 'Return a single device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]/performance', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/performance'", 'sample_resp': '{\n  "perfScore": 10\n}', 'description': 'Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]/uplink', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/uplink'", 'sample_resp': '[\n  {\n    "interface": "WAN 1",\n    "status": "Active",\n    "ip": "1.2.3.4",\n    "gateway": "1.2.3.5",\n    "publicIp": "123.123.123.1",\n    "dns": "8.8.8.8, 8.8.4.4",\n    "usingStaticIp": false\n  }\n]', 'description': 'Return the uplink information for a device.', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/devices/[serial]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My AP","lat":37.4180951010362,"lng":-122.098531723022,"serial":"Q234-ABCD-5678","mac":"00:11:22:33:44:55","tags":" recently-added "}\' \'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]\'', 'sample_resp': '{\n  "name": "My AP",\n  "lat": 37.4180951010362,\n  "lng": -122.098531723022,\n  "serial": "Q234-ABCD-5678",\n  "mac": "00:11:22:33:44:55",\n  "model": "MR34",\n  "address": "1600 Pennsylvania Ave",\n  "notes": "My AP\'s note",\n  "lanIp": "1.2.3.4",\n  "tags": " recently-added ",\n  "networkId": "N_24329156",\n  "beaconIdParams": {\n    "uuid": "00000000-0000-0000-0000-000000000000",\n    "major": 5,\n    "minor": 3\n  }\n}', 'description': 'Update the attributes of a device', 'params': [{'name': 'name', 'description': 'The name of a device', 'is_array': False}, {'name': 'tags', 'description': 'The tags of a device', 'is_array': False}, {'name': 'lat', 'description': 'The latitude of a device', 'is_array': False}, {'name': 'lng', 'description': 'The longitude of a device', 'is_array': False}, {'name': 'address', 'description': 'The address of a device', 'is_array': False}, {'name': 'notes', 'description': 'The notes for the device. String. Limited to 255 characters.', 'is_array': False}, {'name': 'moveMapMarker', 'description': 'Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/devices/claim', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"serial":"Q234-ABCD-5678"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/devices/claim\'', 'sample_resp': '{\n  "name": "My AP",\n  "lat": 37.4180951010362,\n  "lng": -122.098531723022,\n  "serial": "Q234-ABCD-5678",\n  "mac": "00:11:22:33:44:55",\n  "model": "MR34",\n  "address": "1600 Pennsylvania Ave",\n  "notes": "My AP\'s note",\n  "lanIp": "1.2.3.4",\n  "tags": " recently-added ",\n  "networkId": "N_24329156",\n  "beaconIdParams": {\n    "uuid": "00000000-0000-0000-0000-000000000000",\n    "major": 5,\n    "minor": 3\n  }\n}', 'description': 'Claim a device into a network', 'params': [{'name': 'serial', 'description': 'The serial of a device', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'POST', 'path': '/networks/[networkId]/devices/[serial]/remove', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/remove'", 'sample_resp': '{\n  "name": "My AP",\n  "lat": 37.4180951010362,\n  "lng": -122.098531723022,\n  "serial": "Q234-ABCD-5678",\n  "mac": "00:11:22:33:44:55",\n  "model": "MR34",\n  "address": "1600 Pennsylvania Ave",\n  "notes": "My AP\'s note",\n  "lanIp": "1.2.3.4",\n  "tags": " recently-added ",\n  "networkId": "N_24329156",\n  "beaconIdParams": {\n    "uuid": "00000000-0000-0000-0000-000000000000",\n    "major": 5,\n    "minor": 3\n  }\n}', 'description': 'Remove a single device', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]/lldp_cdp', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/lldp_cdp?timespan=7200'", 'sample_resp': '{\n  "sourceMac": "00:11:22:33:44:55",\n  "ports": {\n    "8": {\n      "cdp": {\n        "deviceId": "e0553d8cdf53",\n        "portId": "Port 10",\n        "address": "00:11:22:33:44:55",\n        "sourcePort": "8"\n      }\n    },\n    "12": {\n      "cdp": {\n        "deviceId": "e0553d8cdf53",\n        "portId": "Port 11",\n        "address": "00:11:22:33:44:55",\n        "sourcePort": "12"\n      },\n      "lldp": {\n        "systemName": "Meraki MS350-24X - Phineas",\n        "portId": "11",\n        "managementAddress": "00:11:22:33:44:55",\n        "sourcePort": "12"\n      }\n    }\n  }\n}', 'description': 'List LLDP and CDP information for a device', 'params': [{'name': 'timespan', 'description': 'The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'description': 'Get the uplink loss percentage and latency in milliseconds for a wired network device.', 'path': '/networks/{networkId}/devices/{serial}/lossAndLatencyHistory', 'alternate_path': None, 'successful_http_status': 200, 'params': [{'name': 't0', 'description': 'The beginning of the timespan for the data. The maximum lookback period is 12 months from today.'}, {'name': 't1', 'description': 'The end of the timespan for the data. t1 can be a max of 1 month after t0.'}, {'name': 'timespan', 'description': 'The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and less than or equal to a month (2592000 seconds).'}, {'name': 'resolution', 'description': 'The time resolution in seconds for returned data. The valid resolutions are 60, 600, 3600, 86400. The default is 60.'}, {'name': 'uplink', 'description': 'The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2. The default is wan1.'}, {'name': 'ip', 'description': 'The destination IP used to obtain the requested stats. This is required.'}], 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/lossAndLatencyHistory?uplink=wan1&ip=1.2.3.4&timespan=7200'", 'sample_resp': '[\n  {\n    "startTime": "2018-10-09T22:18:27Z",\n    "endTime": "2018-10-09T22:19:27Z",\n    "lossPercent": 5,\n    "latencyMs": 324\n  },\n  {\n    "startTime": "2018-10-09T22:19:27Z",\n    "endTime": "2018-10-09T22:20:27Z",\n    "lossPercent": 1,\n    "latencyMs": 43\n  },\n  {\n    "startTime": "2018-10-09T22:20:27Z",\n    "endTime": "2018-10-09T22:21:27Z",\n    "lossPercent": 0,\n    "latencyMs": 44\n  }\n]'},
{'http_method': 'GET', 'path': '/networks/[networkId]/cellularFirewallRules', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/cellularFirewallRules'", 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': 'Return the cellular firewall rules for an MX network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/cellularFirewallRules', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"rules":[{"comment":"Allow TCP traffic to subnet with HTTP servers.","policy":"allow","protocol":"tcp","destPort":443,"destCidr":"192.168.1.0/24","srcPort":"Any","srcCidr":"Any","syslogEnabled":false}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/cellularFirewallRules\'', 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': 'Update the cellular firewall rules of an MX network', 'params': [{'name': 'rules', 'description': 'An ordered array of the firewall rules (not including the default rule)', 'is_array': True, 'params': [{'name': 'comment', 'description': 'Description of the rule (optional)', 'is_array': False}, {'name': 'policy', 'description': "'Allow' or 'Deny' traffic specified by this rule", 'is_array': False}, {'name': 'protocol', 'description': "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')", 'is_array': False}, {'name': 'srcPort', 'description': "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'srcCidr', 'description': "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)", 'is_array': False}, {'name': 'destPort', 'description': "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'destCidr', 'description': "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'", 'is_array': False}, {'name': 'syslogEnabled', 'description': 'Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/l3FirewallRules', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/l3FirewallRules'", 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': 'Return the L3 firewall rules for an MX network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/l3FirewallRules', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"rules":[{"comment":"Allow TCP traffic to subnet with HTTP servers.","policy":"allow","protocol":"tcp","destPort":443,"destCidr":"192.168.1.0/24","srcPort":"Any","srcCidr":"Any","syslogEnabled":false}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/l3FirewallRules\'', 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': 'Update the L3 firewall rules of an MX network', 'params': [{'name': 'rules', 'description': 'An ordered array of the firewall rules (not including the default rule)', 'is_array': True, 'params': [{'name': 'comment', 'description': 'Description of the rule (optional)', 'is_array': False}, {'name': 'policy', 'description': "'Allow' or 'Deny' traffic specified by this rule", 'is_array': False}, {'name': 'protocol', 'description': "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')", 'is_array': False}, {'name': 'srcPort', 'description': "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'srcCidr', 'description': "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)", 'is_array': False}, {'name': 'destPort', 'description': "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'destCidr', 'description': "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'", 'is_array': False}, {'name': 'syslogEnabled', 'description': 'Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)', 'is_array': False}]}, {'name': 'syslogDefaultRule', 'description': "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[organizationId]/vpnFirewallRules', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/vpnFirewallRules'", 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': "Return the firewall rules for an organization's site-to-site VPN", 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/organizations/[organizationId]/vpnFirewallRules', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"rules":[{"comment":"Allow TCP traffic to subnet with HTTP servers.","policy":"allow","protocol":"tcp","destPort":443,"destCidr":"192.168.1.0/24","srcPort":"Any","srcCidr":"Any","syslogEnabled":false}]}\' \'https://api.meraki.com/api/v0/organizations/[organizationId]/vpnFirewallRules\'', 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24",\n    "srcPort": "Any",\n    "srcCidr": "Any",\n    "syslogEnabled": false\n  }\n]', 'description': "Update firewall rules of an organization's site-to-site VPN", 'params': [{'name': 'rules', 'description': 'An ordered array of the firewall rules (not including the default rule)', 'is_array': True, 'params': [{'name': 'comment', 'description': 'Description of the rule (optional)', 'is_array': False}, {'name': 'policy', 'description': "'Allow' or 'Deny' traffic specified by this rule", 'is_array': False}, {'name': 'protocol', 'description': "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')", 'is_array': False}, {'name': 'srcPort', 'description': "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'srcCidr', 'description': "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)", 'is_array': False}, {'name': 'destPort', 'description': "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'", 'is_array': False}, {'name': 'destCidr', 'description': "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)", 'is_array': False}, {'name': 'syslogEnabled', 'description': 'Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)', 'is_array': False}]}, {'name': 'syslogDefaultRule', 'description': "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/ssids/[number]/l3FirewallRules', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/l3FirewallRules'", 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24"\n  }\n]', 'description': 'Return the L3 firewall rules for an SSID on an MR network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/ssids/[number]/l3FirewallRules', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"rules":[{"comment":"Allow TCP traffic to subnet with HTTP servers.","policy":"allow","protocol":"tcp","destPort":443,"destCidr":"192.168.1.0/24"}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/l3FirewallRules\'', 'sample_resp': '[\n  {\n    "comment": "Allow TCP traffic to subnet with HTTP servers.",\n    "policy": "allow",\n    "protocol": "tcp",\n    "destPort": 443,\n    "destCidr": "192.168.1.0/24"\n  }\n]', 'description': 'Update the L3 firewall rules of an SSID on an MR network', 'params': [{'name': 'rules', 'description': 'An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)', 'is_array': True, 'params': [{'name': 'policy', 'description': "'Allow' or 'Deny' traffic specified by this rule", 'is_array': False}, {'name': 'protocol', 'description': "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')", 'is_array': False}, {'name': 'destPort', 'description': "Comma-separated list of destination port(s) (integer in the range 1-65535) or 'any'", 'is_array': False}, {'name': 'destCidr', 'description': "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any'", 'is_array': False}, {'name': 'comment', 'description': 'Description of the rule (optional)', 'is_array': False}]}, {'name': 'allowLanAccess', 'description': 'Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'description': 'List the group policies in a network', 'path': '/networks/{networkId}/groupPolicies', 'alternate_path': None, 'successful_http_status': 200, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies'", 'sample_resp': '{\n  "name": "No video streaming",\n  "groupPolicyId": "101"\n}'},
{'http_method': 'GET', 'path': '/networks/[networkId]/httpServers', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'", 'sample_resp': '[\n  {\n    "id": "ABC123",\n    "networkId": "N_123",\n    "name": "My HTTP server",\n    "url": "https://www.example.com/webhooks",\n    "sharedSecret": "foobar"\n  }\n]', 'description': 'List the HTTP servers for a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/httpServers/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'", 'sample_resp': '{\n  "id": "ABC123",\n  "networkId": "N_123",\n  "name": "My HTTP server",\n  "url": "https://www.example.com/webhooks",\n  "sharedSecret": "foobar"\n}', 'description': 'Return an HTTP server', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/httpServers/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My HTTP server","url":"https://www.example.com/webhooks","sharedSecret":"foobar"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]\'', 'sample_resp': '{\n  "id": "ABC123",\n  "networkId": "N_123",\n  "name": "My HTTP server",\n  "url": "https://www.example.com/webhooks",\n  "sharedSecret": "foobar"\n}', 'description': 'Update an HTTP server', 'params': [{'name': 'name', 'description': 'A name for easy reference to the HTTP server', 'is_array': False}, {'name': 'url', 'description': 'The URL of the HTTP server', 'is_array': False}, {'name': 'sharedSecret', 'description': 'A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/httpServers', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My HTTP server","url":"https://www.example.com/webhooks","sharedSecret":"foobar"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/httpServers\'', 'sample_resp': '{\n  "id": "ABC123",\n  "networkId": "N_123",\n  "name": "My HTTP server",\n  "url": "https://www.example.com/webhooks",\n  "sharedSecret": "foobar"\n}', 'description': 'Add an HTTP server', 'params': [{'name': 'name', 'description': 'A name for easy reference to the HTTP server', 'is_array': False}, {'name': 'url', 'description': 'The URL of the HTTP server', 'is_array': False}, {'name': 'sharedSecret', 'description': 'A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/httpServers/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'", 'sample_resp': '(empty)', 'description': 'Delete an HTTP server', 'params': None, 'successful_http_status': 204},
{'http_method': 'POST', 'path': '/networks/[networkId]/httpServers/webhookTests', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests'", 'sample_resp': '{\n  "id": "1234",\n  "url": "https://www.example.com/path",\n  "status": "enqueued"\n}', 'description': 'Send a test webhook', 'params': [{'name': 'url', 'description': 'The URL where the test webhook will be sent', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/httpServers/webhookTests/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests/[id]'", 'sample_resp': '{\n  "id": "1234",\n  "url": "https://www.example.com/path",\n  "status": "delivered"\n}', 'description': 'Return the status of a webhook test', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/merakiAuthUsers', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers'", 'sample_resp': '[\n  {\n    "id": "aGlAaGkuY29t",\n    "email": "miles@meraki.com",\n    "name": "Miles Meraki",\n    "createdAt": 1518365681,\n    "accountType": "Guest",\n    "authorizations": [\n      {\n        "authorizedZone": "Store WiFi",\n        "expiresAt": 1526087474,\n        "authorizedByName": "Miles Meraki",\n        "authorizedByEmail": "miles@meraki.com"\n      }\n    ]\n  }\n]', 'description': 'List the splash or RADIUS users configured under Meraki Authentication for a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/merakiAuthUsers/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers/[id]'", 'sample_resp': '{\n  "id": "aGlAaGkuY29t",\n  "email": "miles@meraki.com",\n  "name": "Miles Meraki",\n  "createdAt": 1518365681,\n  "accountType": "Guest",\n  "authorizations": [\n    {\n      "authorizedZone": "Store WiFi",\n      "expiresAt": 1526087474,\n      "authorizedByName": "Miles Meraki",\n      "authorizedByEmail": "miles@meraki.com"\n    }\n  ]\n}', 'description': 'Return the Meraki Auth splash or RADIUS user', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[organizationId]/networks', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/networks'", 'sample_resp': '[\n  {\n    "id": "N_24329156",\n    "organizationId": 2930418,\n    "name": "My organization",\n    "timeZone": "America/Los_Angeles",\n    "tags": " tag1 tag2 ",\n    "type": "appliance switch camera",\n    "disableMyMerakiCom": false\n  }\n]', 'description': 'List the networks in an organization', 'params': [{'name': 'configTemplateId', 'description': 'An optional parameter that is the ID of a config template. Will return all networks bound to that template.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]'", 'sample_resp': '{\n  "id": "N_24329156",\n  "organizationId": 2930418,\n  "name": "My organization",\n  "timeZone": "America/Los_Angeles",\n  "tags": " tag1 tag2 ",\n  "type": "appliance switch camera",\n  "disableMyMerakiCom": false\n}', 'description': 'Return a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My organization","timeZone":"America/Los_Angeles","tags":" tag1 tag2 ","disableMyMerakiCom":false}\' \'https://api.meraki.com/api/v0/networks/[id]\'', 'sample_resp': '{\n  "id": "N_24329156",\n  "organizationId": 2930418,\n  "name": "My organization",\n  "timeZone": "America/Los_Angeles",\n  "tags": " tag1 tag2 ",\n  "type": "appliance switch camera",\n  "disableMyMerakiCom": false\n}', 'description': 'Update a network', 'params': [{'name': 'name', 'description': 'The name of the new network', 'is_array': False}, {'name': 'timeZone', 'description': "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>", 'is_array': False, 'html_safe': True}, {'name': 'tags', 'description': 'A space-separated list of tags to be applied to the network', 'is_array': False}, {'name': 'disableMyMerakiCom', 'description': "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)", 'is_array': False, 'html_safe': True}, {'name': 'disableRemoteStatusPage', 'description': "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false", 'is_array': False, 'html_safe': True}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/organizations/[organizationId]/networks', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My organization","type":"appliance switch camera","tags":" tag1 tag2 ","disableMyMerakiCom":false}\' \'https://api.meraki.com/api/v0/organizations/[organizationId]/networks\'', 'sample_resp': '{\n  "id": "N_24329156",\n  "organizationId": 2930418,\n  "name": "My organization",\n  "timeZone": "America/Los_Angeles",\n  "tags": " tag1 tag2 ",\n  "type": "appliance switch camera",\n  "disableMyMerakiCom": false\n}', 'description': 'Create a network', 'params': [{'name': 'name', 'description': 'The name of the new network', 'is_array': False}, {'name': 'type', 'description': 'The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.', 'is_array': False}, {'name': 'tags', 'description': 'A space-separated list of tags to be applied to the network', 'is_array': False}, {'name': 'timeZone', 'description': "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>", 'is_array': False, 'html_safe': True}, {'name': 'copyFromNetworkId', 'description': "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.", 'is_array': False}, {'name': 'disableMyMerakiCom', 'description': "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)", 'is_array': False, 'html_safe': True}, {'name': 'disableRemoteStatusPage', 'description': "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false", 'is_array': False, 'html_safe': True}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[id]'", 'sample_resp': '(empty)', 'description': 'Delete a network', 'params': None, 'successful_http_status': 204},
{'http_method': 'POST', 'path': '/networks/[id]/bind', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"configTemplateId":"N_23952905","autoBind":false}\' \'https://api.meraki.com/api/v0/networks/[id]/bind\'', 'sample_resp': '{\n  "id": "N_24329156",\n  "organizationId": 2930418,\n  "name": "My organization",\n  "timeZone": "America/Los_Angeles",\n  "tags": " tag1 tag2 ",\n  "type": "appliance switch camera",\n  "disableMyMerakiCom": false\n}', 'description': 'Bind a network to a template.', 'params': [{'name': 'configTemplateId', 'description': 'The ID of the template to which the network should be bound.', 'is_array': False}, {'name': 'autoBind', 'description': "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[id]/unbind', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[id]/unbind'", 'sample_resp': '{\n  "id": "N_24329156",\n  "organizationId": 2930418,\n  "name": "My organization",\n  "timeZone": "America/Los_Angeles",\n  "tags": " tag1 tag2 ",\n  "type": "appliance switch camera",\n  "disableMyMerakiCom": false\n}', 'description': 'Unbind a network from a template.', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/siteToSiteVpn', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/siteToSiteVpn'", 'sample_resp': '{\n  "mode": "spoke",\n  "hubs": [\n    {\n      "hubId": "N_4901849",\n      "useDefaultRoute": true\n    },\n    {\n      "hubId": "N_1892489",\n      "useDefaultRoute": false\n    }\n  ],\n  "subnets": [\n    {\n      "localSubnet": "192.168.1.0/24",\n      "useVpn": true\n    },\n    {\n      "localSubnet": "192.168.128.0/24",\n      "useVpn": true\n    }\n  ]\n}', 'description': 'Return the site-to-site VPN settings of a network. Only valid for MX networks.', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[id]/siteToSiteVpn', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"mode":"spoke","hubs":[{"hubId":"N_4901849","useDefaultRoute":true},{"hubId":"N_1892489","useDefaultRoute":false}],"subnets":[{"localSubnet":"192.168.1.0/24","useVpn":true},{"localSubnet":"192.168.128.0/24","useVpn":true}]}\' \'https://api.meraki.com/api/v0/networks/[id]/siteToSiteVpn\'', 'sample_resp': '{\n  "mode": "spoke",\n  "hubs": [\n    {\n      "hubId": "N_4901849",\n      "useDefaultRoute": true\n    },\n    {\n      "hubId": "N_1892489",\n      "useDefaultRoute": false\n    }\n  ],\n  "subnets": [\n    {\n      "localSubnet": "192.168.1.0/24",\n      "useVpn": true\n    },\n    {\n      "localSubnet": "192.168.128.0/24",\n      "useVpn": true\n    }\n  ]\n}', 'description': 'Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.', 'params': [{'name': 'mode', 'description': 'The site-to-site VPN mode: hub, spoke, or none', 'is_array': False}, {'name': 'hubs', 'description': 'The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.', 'is_array': True, 'params': [{'name': 'hubId', 'description': 'The network ID of the hub.', 'is_array': False}, {'name': 'useDefaultRoute', 'description': "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.", 'is_array': False}]}, {'name': 'subnets', 'description': 'The list of subnets and their VPN presence.', 'is_array': True, 'params': [{'name': 'localSubnet', 'description': 'The CIDR notation subnet used within the VPN', 'is_array': False}, {'name': 'useVpn', 'description': 'Indicates the presence of the subnet in the VPN', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/traffic', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/traffic?timespan=7200'", 'sample_resp': '[\n  {\n    "application": "Gmail",\n    "destination": null,\n    "protocol": "TCP",\n    "port": 443,\n    "sent": 138.0,\n    "recv": 61.0,\n    "numClients": 7,\n    "activeTime": 77000,\n    "flows": 300\n  }\n]', 'description': 'The traffic analysis data for this network.\n<a href="https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n', 'params': [{'name': 'timespan', 'description': 'The timespan for the data.  Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)', 'is_array': False}, {'name': 'deviceType', 'description': 'Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/accessPolicies', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/accessPolicies'", 'sample_resp': '[\n  {\n    "number": 1,\n    "name": "My access policy",\n    "accessType": "8021.x",\n    "guestVlan": 3700,\n    "radiusServers": [\n      {\n        "ip": "1.2.3.4",\n        "port": 1337\n      },\n      {\n        "ip": "2.3.4.5",\n        "port": 1337\n      }\n    ]\n  }\n]', 'description': 'List the access policies for this network. Only valid for MS networks.', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/airMarshal', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/airMarshal?timespan=7200'", 'sample_resp': '[\n  {\n    "ssid": "linksys",\n    "bssids": [\n      {\n        "bssid": "00:11:22:33:44:55",\n        "contained": false,\n        "detectedBy": [\n          {\n            "device": "Q234-ABCD-5678",\n            "rssi": 17\n          }\n        ]\n      }\n    ],\n    "channels": [\n      36,\n      40\n    ],\n    "firstSeen": 1518365681,\n    "lastSeen": 1526087474,\n    "wiredMacs": [\n      "00:11:22:33:44:55"\n    ],\n    "wiredVlans": [\n      0,\n      108\n    ],\n    "wiredLastSeen": 1526087474\n  }\n]', 'description': 'List Air Marshal scan results from a network', 'params': [{'name': 'timespan', 'description': 'The timespan for which results will be fetched. Must be at most one month in seconds.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/bluetoothSettings', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/bluetoothSettings'", 'sample_resp': '{\n  "id": "N_24329156",\n  "scanningEnabled": true,\n  "advertisingEnabled": true,\n  "uuid": "00000000-0000-0000-000-000000000000",\n  "majorMinorAssignmentMode": "Non-unique",\n  "major": 1\n}', 'description': 'Return the Bluetooth settings for a network.\n<a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.\n', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[id]/bluetoothSettings', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"id":"N_24329156","scanningEnabled":true,"advertisingEnabled":true,"uuid":"00000000-0000-0000-000-000000000000","majorMinorAssignmentMode":"Non-unique","major":1}\' \'https://api.meraki.com/api/v0/networks/[id]/bluetoothSettings\'', 'sample_resp': '{\n  "id": "N_24329156",\n  "scanningEnabled": true,\n  "advertisingEnabled": true,\n  "uuid": "00000000-0000-0000-000-000000000000",\n  "majorMinorAssignmentMode": "Non-unique",\n  "major": 1\n}', 'description': 'Update the Bluetooth settings for a network. See the docs page for <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a>.\n', 'params': [{'name': 'scanningEnabled', 'description': 'Whether APs will scan for Bluetooth enabled clients. (true, false)', 'is_array': False}, {'name': 'advertisingEnabled', 'description': 'Whether APs will advertise beacons. (true, false)', 'is_array': False}, {'name': 'uuid', 'description': 'The UUID to be used in the beacon identifier.', 'is_array': False}, {'name': 'majorMinorAssignmentMode', 'description': "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')", 'is_array': False}, {'name': 'major', 'description': "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.", 'is_array': False}, {'name': 'minor', 'description': "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations'", 'sample_resp': '[\n  {\n    "id": 2930418,\n    "name": "My organization"\n  }\n]', 'description': 'List the organizations that the user has privileges on', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]'", 'sample_resp': '{\n  "id": 2930418,\n  "name": "My organization"\n}', 'description': 'Return an organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/organizations/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My organization"}\' \'https://api.meraki.com/api/v0/organizations/[id]\'', 'sample_resp': '{\n  "id": 2930418,\n  "name": "My organization"\n}', 'description': 'Update an organization', 'params': [{'name': 'name', 'description': 'The name of the organization', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/organizations', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My organization"}\' \'https://api.meraki.com/api/v0/organizations\'', 'sample_resp': '{\n  "id": 2930418,\n  "name": "My organization"\n}', 'description': 'Create a new organization', 'params': [{'name': 'name', 'description': 'The name of the organization', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'POST', 'path': '/organizations/[id]/clone', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My organization"}\' \'https://api.meraki.com/api/v0/organizations/[id]/clone\'', 'sample_resp': '{\n  "id": 2930418,\n  "name": "My organization"\n}', 'description': 'Create a new organization by cloning the addressed organization', 'params': [{'name': 'name', 'description': 'The name of the new organization', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'POST', 'path': '/organizations/[id]/claim', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"order":"4CXXXXXXX"}\' \'https://api.meraki.com/api/v0/organizations/[id]/claim\'', 'sample_resp': '{\n  "id": 2930418,\n  "name": "My organization"\n}', 'description': "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.", 'params': [{'name': 'order', 'description': 'The order number that should be claimed', 'is_array': False}, {'name': 'serial', 'description': 'The serial of the device that should be claimed', 'is_array': False}, {'name': 'licenseKey', 'description': 'The license key that should be claimed', 'is_array': False}, {'name': 'licenseMode', 'description': "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is required when claiming by licenseKey. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.", 'is_array': False, 'html_safe': True}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]/licenseState', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/licenseState'", 'sample_resp': '{\n  "status": "OK",\n  "expirationDate": "Feb 8, 2020 UTC",\n  "licensedDeviceCounts": {\n    "MS": 100\n  }\n}', 'description': 'Return the license state for an organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]/inventory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/inventory'", 'sample_resp': '[\n  {\n    "mac": "00:11:22:33:44:55",\n    "serial": "Q234-ABCD-5678",\n    "networkId": "N_24329156",\n    "model": "MR34",\n    "claimedAt": 1518365681.0,\n    "publicIp": "123.123.123.1",\n    "name": "My AP"\n  }\n]', 'description': 'Return the inventory for an organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]/deviceStatuses', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/deviceStatuses'", 'sample_resp': '[\n  {\n    "name": "My AP",\n    "serial": "Q234-ABCD-5678",\n    "mac": "00:11:22:33:44:55",\n    "status": "online",\n    "lanIp": "1.2.3.4",\n    "publicIp": "123.123.123.1",\n    "networkId": "N_24329156"\n  }\n]', 'description': 'List the status of every Meraki device in the organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]/snmp', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/snmp'", 'sample_resp': '{\n  "v2cEnabled": false,\n  "v3Enabled": false,\n  "v3AuthMode": "SHA",\n  "v3PrivMode": "AES128",\n  "peerIps": "123.123.123.1",\n  "hostname": "n1.meraki.com",\n  "port": 443\n}', 'description': 'Return the SNMP settings for an organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/organizations/[id]/snmp', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"v2cEnabled":false,"v3Enabled":false}\' \'https://api.meraki.com/api/v0/organizations/[id]/snmp\'', 'sample_resp': '{\n  "v2cEnabled": false,\n  "v3Enabled": false,\n  "v3AuthMode": "SHA",\n  "v3PrivMode": "AES128",\n  "peerIps": "123.123.123.1",\n  "hostname": "n1.meraki.com",\n  "port": 443\n}', 'description': 'Update the SNMP settings for an organization', 'params': [{'name': 'v2cEnabled', 'description': 'Boolean indicating whether SNMP version 2c is enabled for the organization', 'is_array': False}, {'name': 'v3Enabled', 'description': 'Boolean indicating whether SNMP version 3 is enabled for the organization', 'is_array': False}, {'name': 'v3AuthMode', 'description': 'The SNMP version 3 authentication mode either MD5 or SHA', 'is_array': False}, {'name': 'v3AuthPass', 'description': 'The SNMP version 3 authentication password.  Must be at least 8 characters if specified.', 'is_array': False}, {'name': 'v3PrivMode', 'description': 'The SNMP version 3 privacy mode DES or AES128', 'is_array': False}, {'name': 'v3PrivPass', 'description': 'The SNMP version 3 privacy password.  Must be at least 8 characters if specified.', 'is_array': False}, {'name': 'peerIps', 'description': 'The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. "1.2.3.4;2.3.4.5").', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[id]/thirdPartyVPNPeers', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers'", 'sample_resp': '[\n  [\n    {\n      "name": "My peer 1",\n      "publicIp": "123.123.123.1",\n      "privateSubnets": [\n        "192.168.1.0/24",\n        "192.168.128.0/24"\n      ],\n      "secret": "asdf1234",\n      "ipsecPolicies": {\n        "ikeCipherAlgo": [\n          "tripledes"\n        ],\n        "ikeAuthAlgo": [\n          "sha1"\n        ],\n        "ikeDiffieHellmanGroup": [\n          "group2"\n        ],\n        "ikeLifetime": "28800",\n        "childCipherAlgo": [\n          "aes128"\n        ],\n        "childAuthAlgo": [\n          "sha1"\n        ],\n        "childPfsGroup": [\n          "disabled"\n        ],\n        "childLifetime": "28800"\n      }\n    },\n    {\n      "name": "My peer 2",\n      "publicIp": "123.123.123.2",\n      "privateSubnets": [\n        "192.168.2.0/24",\n        "192.168.129.0/24"\n      ],\n      "secret": "asdf56785678567856785678",\n      "ipsecPoliciesPreset": "default"\n    }\n  ]\n]', 'description': 'Return the third party VPN peers for an organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/organizations/[id]/thirdPartyVPNPeers', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'[[{"name":"My peer 1","publicIp":"123.123.123.1","privateSubnets":["192.168.1.0/24","192.168.128.0/24"],"secret":"asdf1234","ipsecPolicies":{"ikeCipherAlgo":["tripledes"],"ikeAuthAlgo":["sha1"],"ikeDiffieHellmanGroup":["group2"],"ikeLifetime":"28800","childCipherAlgo":["aes128"],"childAuthAlgo":["sha1"],"childPfsGroup":["disabled"],"childLifetime":"28800"}},{"name":"My peer 2","publicIp":"123.123.123.2","privateSubnets":["192.168.2.0/24","192.168.129.0/24"],"secret":"asdf56785678567856785678","ipsecPoliciesPreset":"default"}]]\' \'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers\'', 'sample_resp': '[\n  [\n    {\n      "name": "My peer 1",\n      "publicIp": "123.123.123.1",\n      "privateSubnets": [\n        "192.168.1.0/24",\n        "192.168.128.0/24"\n      ],\n      "secret": "asdf1234",\n      "ipsecPolicies": {\n        "ikeCipherAlgo": [\n          "tripledes"\n        ],\n        "ikeAuthAlgo": [\n          "sha1"\n        ],\n        "ikeDiffieHellmanGroup": [\n          "group2"\n        ],\n        "ikeLifetime": "28800",\n        "childCipherAlgo": [\n          "aes128"\n        ],\n        "childAuthAlgo": [\n          "sha1"\n        ],\n        "childPfsGroup": [\n          "disabled"\n        ],\n        "childLifetime": "28800"\n      }\n    },\n    {\n      "name": "My peer 2",\n      "publicIp": "123.123.123.2",\n      "privateSubnets": [\n        "192.168.2.0/24",\n        "192.168.129.0/24"\n      ],\n      "secret": "asdf56785678567856785678",\n      "ipsecPoliciesPreset": "default"\n    }\n  ]\n]', 'description': 'Update the third party VPN peers for an organization', 'params': [{'name': 'name', 'description': 'The name of the VPN peer', 'is_array': False}, {'name': 'publicIp', 'description': 'The public IP of the VPN peer', 'is_array': False}, {'name': 'privateSubnets', 'description': 'The list of the private subnets of the VPN peer', 'is_array': False}, {'name': 'ipsecPolicies', 'description': 'Custom IPsec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPsec policies will be used.', 'is_array': False, 'params': [{'name': 'ikeCipherAlgo', 'description': 'This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: "aes256", "aes192", "aes128", "tripledes", "des"', 'is_array': False}, {'name': 'ikeAuthAlgo', 'description': 'This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: "sha1", "md5"', 'is_array': False}, {'name': 'ikeDiffieHellmanGroup', 'description': 'This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: "group5", "group2", "group1"', 'is_array': False}, {'name': 'ikeLifetime', 'description': 'The lifetime of the Phase 1 SA in seconds.', 'is_array': False}, {'name': 'childCipherAlgo', 'description': 'This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: "aes256", "aes192", "aes128", "tripledes", "des"', 'is_array': False}, {'name': 'childAuthAlgo', 'description': 'This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: "sha1", "md5"', 'is_array': False}, {'name': 'childPfsGroup', 'description': 'This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: "disabled", "group5", "group2", "group1"', 'is_array': False}, {'name': 'childLifetime', 'description': 'The lifetime of the Phase 2 SA in seconds.', 'is_array': False}]}, {'name': 'ipsecPoliciesPreset', 'description': 'One of the following available presets: "default", "aws", "azure". If this is provided, the IPsecPolicies parameter is ignored.', 'is_array': False}, {'name': 'secret', 'description': 'The shared secret with the VPN peer', 'is_array': False}, {'name': 'networkTags', 'description': 'A list of network tags that will connect with this peer. Use "all" for all networks. Use "none" for no networks. If missing, default is "all".', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneAnnouncements', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements'", 'sample_resp': '[\n  {\n    "id": "1284392014819",\n    "name": "My announcement group",\n    "phoneAdmins": [\n      "Miles Meraki"\n    ],\n    "phoneMembers": [\n      "Miles Meraki"\n    ]\n  }\n]', 'description': 'List all announcement groups in a network.', 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/phoneAnnouncements', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My announcement group"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements\'', 'sample_resp': '{\n  "id": "1284392014819",\n  "name": "My announcement group",\n  "phoneAdmins": [\n    "Miles Meraki"\n  ],\n  "phoneMembers": [\n    "Miles Meraki"\n  ]\n}', 'description': 'Add an announcement group.', 'params': [{'name': 'name', 'description': 'The full name of the new announcement group.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/phoneAnnouncements/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements/[id]'", 'sample_resp': '(empty)', 'description': 'Delete an announcement group.', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneAssignments', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments'", 'sample_resp': '[\n  {\n    "serial": "Q2XX-XXXX-XXXX",\n    "contactId": "823",\n    "contactType": "Dashboard",\n    "publicNumber": [\n      "+15555555555"\n    ],\n    "ext": "1234"\n  }\n]', 'description': 'List all phones in a network and their contact assignment', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneAssignments/[serial]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]'", 'sample_resp': '{\n  "serial": "Q2XX-XXXX-XXXX",\n  "contactId": "823",\n  "contactType": "Dashboard",\n  "publicNumber": [\n    "+15555555555"\n  ],\n  "ext": "1234"\n}', 'description': "Return a phone's contact assignment", 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/phoneAssignments/[serial]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"contactId":"823","contactType":"Google","publicNumber":["+15555555555"],"ext":"1234"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]\'', 'sample_resp': '{\n  "serial": "Q2XX-XXXX-XXXX",\n  "contactId": "823",\n  "contactType": "Dashboard",\n  "publicNumber": [\n    "+15555555555"\n  ],\n  "ext": "1234"\n}', 'description': 'Assign a contact and number(s) to a phone', 'params': [{'name': 'contactId', 'description': "The ID of the contact (obtained from 'Phone Contacts' API)", 'is_array': False}, {'name': 'contactType', 'description': "The type of contact to bind: 'Dashboard' or 'Google' (obtained from 'Phone Contacts' API)", 'is_array': False}, {'name': 'publicNumber', 'description': "The public number(s) in E.164 format (obtained from 'Phone Numbers' API) as an array of strings. Multiple numbers per phone are allowed.\n    Omitting this paramater will remove the public number assignment(s).", 'is_array': False}, {'name': 'ext', 'description': 'The 4-6 digit extension. Extension cannot be in use. Omitting this parameter will remove the extension assignment.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/phoneAssignments/[serial]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]'", 'sample_resp': '(empty)', 'description': 'Remove a phone assignment (unprovision a phone)', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneCallgroups', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups'", 'sample_resp': '[\n  {\n    "id": "178449602133687616",\n    "name": "Meraki Sales",\n    "publicNumber": "+15555555555",\n    "ext": "1234"\n  }\n]', 'description': 'List all call groups in a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneCallgroups/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]'", 'sample_resp': '{\n  "id": "178449602133687616",\n  "name": "Meraki Sales",\n  "publicNumber": "+15555555555",\n  "ext": "1234"\n}', 'description': "Show a call group's details", 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/phoneCallgroups/', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"Sales Group","ext":"1234","publicNumber":"+15555555555","ringStrategy":"ring-all","scope":"some","tags":["sales","support"],"noAnswerAction":"transfer-to-ext","transferExtension":"1003"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/\'', 'sample_resp': '{\n  "id": "178449602133687616",\n  "name": "Meraki Sales",\n  "publicNumber": "+15555555555",\n  "ext": "1234"\n}', 'description': 'Create a new call group.', 'params': [{'name': 'name', 'description': 'The call group name.', 'is_array': False}, {'name': 'ext', 'description': 'The 4-6 digit extension. Extension cannot be in use.', 'is_array': False}, {'name': 'publicNumber', 'description': "The public number in E.164 format (obtained from 'Phone Numbers' API)", 'is_array': False}, {'name': 'ringStrategy', 'description': "Ring strategy: options: 'ring-all', 'longest-idle-agent', 'round-robin'", 'is_array': False}, {'name': 'scope', 'description': "Device Scope: options: 'all' - All devices, 'some' - Devices with ANY of the following tags (specify tags field), 'all_tags' - Devices with ALL of the following tags (specify tags field), 'without_all_tags' - Devices WITHOUT ALL of the following tags (specify tags field)", 'is_array': False}, {'name': 'tags', 'description': 'Scope tags (use if scope is \'some\', \'all_tags\', or \'without_all_tags\'). Submit as array of text. ex: ["sales", "eng"]', 'is_array': False}, {'name': 'allowExternalForwards', 'description': 'Allow external forwards. Boolean true or false', 'is_array': False}, {'name': 'waitTimeEnabled', 'description': 'Enable Max Wait Time. Boolean true or false', 'is_array': False}, {'name': 'maxWaitTime', 'description': 'Max wait time in seconds.', 'is_array': False}, {'name': 'noAnswerAction', 'description': "No answer action: options: 'hang-up', 'transfer-to-ext'. If 'transfer-to-ext', use the transferExtension field", 'is_array': False}, {'name': 'transferExtension', 'description': "Use if noAnswerAction is 'transfer-to-ext. The extension to transfer to after wait time expires. The extension must exist on the network. Submit the 4-6 digit extension as text.'", 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'PUT', 'path': '/networks/[networkId]/phoneCallgroups/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"ext":"1234","publicNumber":"+15555555555","ringStrategy":"ring-all","scope":"some","tags":["sales","support"],"noAnswerAction":"transfer-to-ext","transferExtension":"1003"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]\'', 'sample_resp': '{\n  "id": "178449602133687616",\n  "name": "Meraki Sales",\n  "publicNumber": "+15555555555",\n  "ext": "1234"\n}', 'description': "Update a call group's details. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.", 'params': [{'name': 'name', 'description': 'The call group name.', 'is_array': False}, {'name': 'ext', 'description': 'The 4-6 digit extension. Extension cannot be in use.', 'is_array': False}, {'name': 'publicNumber', 'description': "The public number(s) in E.164 format (obtained from 'Phone Numbers' API)", 'is_array': False}, {'name': 'ringStrategy', 'description': "Ring strategy: options: 'ring-all', 'longest-idle-agent', 'round-robin'", 'is_array': False}, {'name': 'scope', 'description': "Device Scope: options: 'all' - All devices, 'some' - Devices with ANY of the following tags (specify tags field), 'all_tags' - Devices with ALL of the following tags (specify tags field), 'without_all_tags' - Devices WITHOUT ALL of the following tags (specify tags field)", 'is_array': False}, {'name': 'tags', 'description': 'Scope tags (use if scope is \'some\', \'all_tags\', or \'without_all_tags\'). Submit as array of text. ex: ["sales", "eng"]', 'is_array': False}, {'name': 'allowExternalForwards', 'description': 'Allow external forwards. Boolean true or false', 'is_array': False}, {'name': 'waitTimeEnabled', 'description': 'Enable Max Wait Time. Boolean true or false', 'is_array': False}, {'name': 'maxWaitTime', 'description': 'Max wait time in seconds.', 'is_array': False}, {'name': 'noAnswerAction', 'description': "No answer action: options: 'hang-up', 'transfer-to-ext'. If 'transfer-to-ext', use the transferExtension field", 'is_array': False}, {'name': 'transferExtension', 'description': "The extension to transfer to after wait time expires. Submit the 4-6 digit extension as text. Use if noAnswerAction is 'transfer-to-ext'", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/phoneCallgroups/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]'", 'sample_resp': '(empty)', 'description': 'Delete a call group', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneConferenceRooms', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms'", 'sample_resp': '[\n  {\n    "id": 563512903374733359,\n    "name": "Meraki Conferece Room",\n    "description": "Meraki HQ main conference room",\n    "ext": "1111",\n    "publicNumber": "+15555555555",\n    "pin": "1234",\n    "maxMembers": 10\n  }\n]', 'description': 'List all the phone conference rooms in a network.', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneConferenceRooms/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]'", 'sample_resp': '{\n  "id": 563512903374733359,\n  "name": "Meraki Conferece Room",\n  "description": "Meraki HQ main conference room",\n  "ext": "1111",\n  "publicNumber": "+15555555555",\n  "pin": "1234",\n  "maxMembers": 10\n}', 'description': "Show a conference room's details.", 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/phoneConferenceRooms', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"Meraki Conference Room"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms\'', 'sample_resp': '{\n  "id": 563512903374733359,\n  "name": "Meraki Conferece Room",\n  "description": "Meraki HQ main conference room",\n  "ext": "1111",\n  "publicNumber": "+15555555555",\n  "pin": "1234",\n  "maxMembers": 10\n}', 'description': 'Add a conference room.', 'params': [{'name': 'name', 'description': 'The full name of the new conference room.', 'is_array': False}, {'name': 'description', 'description': 'The description of the new conference room.', 'is_array': False}, {'name': 'ext', 'description': 'The extension of the new conference room.', 'is_array': False}, {'name': 'publicNumber', 'description': 'The public number of the new conference room.', 'is_array': False}, {'name': 'maxMembers', 'description': 'The max members allowed in the new conference room.', 'is_array': False}, {'name': 'pin', 'description': 'Password that must be entered before being allowed in the conference room.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'PUT', 'path': '/networks/[networkId]/phoneConferenceRooms/[id]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"Meraki Conference Room"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]\'', 'sample_resp': '{\n  "id": 563512903374733359,\n  "name": "Meraki Conferece Room",\n  "description": "Meraki HQ main conference room",\n  "ext": "1111",\n  "publicNumber": "+15555555555",\n  "pin": "1234",\n  "maxMembers": 10\n}', 'description': "Update a conference room's. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.", 'params': [{'name': 'name', 'description': 'The full name of the conference room.', 'is_array': False}, {'name': 'description', 'description': 'The description of the conference room.', 'is_array': False}, {'name': 'ext', 'description': 'The extension of the conference room.', 'is_array': False}, {'name': 'publicNumber', 'description': 'The public number of the conference room.', 'is_array': False}, {'name': 'maxMembers', 'description': 'The max members allowed in the conference room.', 'is_array': False}, {'name': 'pin', 'description': 'Password that must be entered before being allowed in the conference room.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/phoneConferenceRooms/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]'", 'sample_resp': '(empty)', 'description': 'Delete a conference room.', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneContacts', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts'", 'sample_resp': '[\n  {\n    "id": "1234",\n    "name": "Miles Meraki",\n    "type": "Dashboard"\n  }\n]', 'description': 'List the phone contacts in a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/phoneContacts', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"Miles Meraki"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts\'', 'sample_resp': '{\n  "id": "1234",\n  "name": "Miles Meraki",\n  "type": "Dashboard"\n}', 'description': 'Add a contact', 'params': [{'name': 'name', 'description': 'The full name of the new contact', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'PUT', 'path': '/networks/[networkId]/phoneContacts/[contactId]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"Miles Meraki"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts/[contactId]\'', 'sample_resp': '{\n  "id": "1234",\n  "name": "Miles Meraki",\n  "type": "Dashboard"\n}', 'description': 'Update a phone contact. Google Directory contacts cannot be modified.', 'params': [{'name': 'name', 'description': 'The name of the contact', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/phoneContacts/[contactId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts/[contactId]'", 'sample_resp': '(empty)', 'description': 'Delete a phone contact. Google Directory contacts cannot be removed.', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneNumbers', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneNumbers'", 'sample_resp': '[\n  {\n    "publicNumber": "+15555555555"\n  }\n]', 'description': 'List all the phone numbers in a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/phoneNumbers/available', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneNumbers/available'", 'sample_resp': '[\n  {\n    "publicNumber": "+15555555555"\n  }\n]', 'description': 'List the available phone numbers in a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/pii/piiKeys', 'alternate_path': '/organizations/[organizationId]/pii/piiKeys', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/piiKeys'", 'sample_resp': '{\n  [networkId]:{\n    "macs":[\n      "00:77:00:77:00:77"\n    ],\n    "emails":[\n      "fake@example.com"\n    ],\n    "usernames":[\n      "fakename"\n    ],\n    "serials":[\n      "abcd1234"\n    ],\n    "imeis":[\n      "990000862471854"\n    ],\n    "bluetoothMacs":[\n      "00:77:00:77:00:77"\n    ],\n  }\n}\n', 'description': 'List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key "0" containing the applicable keys.', 'params': [{'name': 'username', 'description': 'The username of a Systems Manager user', 'is_array': False}, {'name': 'email', 'description': 'The email of a network user account or a Systems Manager device', 'is_array': False}, {'name': 'mac', 'description': 'The MAC of a network client device or a Systems Manager device', 'is_array': False}, {'name': 'serial', 'description': 'The serial of a Systems Manager device', 'is_array': False}, {'name': 'imei', 'description': 'The IMEI of a Systems Manager device', 'is_array': False}, {'name': 'bluetoothMac', 'description': 'The MAC of a Bluetooth client', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/pii/smDevicesForKey', 'alternate_path': '/organizations/[organizationId]/pii/smDevicesForKey', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smDevicesForKey'", 'sample_resp': '{\n  [networkId]:["1099541095293", "8348382288234"]\n}\n', 'description': 'Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.', 'params': [{'name': 'username', 'description': 'The username of a Systems Manager user', 'is_array': False}, {'name': 'email', 'description': 'The email of a network user account or a Systems Manager device', 'is_array': False}, {'name': 'mac', 'description': 'The MAC of a network client device or a Systems Manager device', 'is_array': False}, {'name': 'serial', 'description': 'The serial of a Systems Manager device', 'is_array': False}, {'name': 'imei', 'description': 'The IMEI of a Systems Manager device', 'is_array': False}, {'name': 'bluetoothMac', 'description': 'The MAC of a Bluetooth client', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/pii/smOwnersForKey', 'alternate_path': '/organizations/[organizationId]/pii/smOwnersForKey', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smOwnersForKey'", 'sample_resp': '{\n  [networkId]:["1099541095293"]\n}\n', 'description': 'Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.', 'params': [{'name': 'username', 'description': 'The username of a Systems Manager user', 'is_array': False}, {'name': 'email', 'description': 'The email of a network user account or a Systems Manager device', 'is_array': False}, {'name': 'mac', 'description': 'The MAC of a network client device or a Systems Manager device', 'is_array': False}, {'name': 'serial', 'description': 'The serial of a Systems Manager device', 'is_array': False}, {'name': 'imei', 'description': 'The IMEI of a Systems Manager device', 'is_array': False}, {'name': 'bluetoothMac', 'description': 'The MAC of a Bluetooth client', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/pii/requests', 'alternate_path': '/organizations/[organizationId]/pii/requests', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests'", 'sample_resp': '[\n  {\n    "id": "1234",\n    "organizationWide": false,\n    "networkId": "N_1234",\n    "type": "delete",\n    "mac": "00:77:00:77:00:77",\n    "datasets": "[\'usage\', \'events\']",\n    "status": "Completed",\n    "createdAt": 1524692227,\n    "completedAt": 1524702227\n  }\n]\n', 'description': 'List the PII requests for this network or organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/pii/requests/[id]', 'alternate_path': '/organizations/[organizationId]/pii/requests/[id]', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'", 'sample_resp': '{\n  "id": "1234",\n  "organizationWide": false,\n  "networkId": "N_1234",\n  "type": "delete",\n  "mac": "00:77:00:77:00:77",\n  "datasets": "[\'usage\', \'events\']",\n  "status": "Completed",\n  "createdAt": 1524692227,\n  "completedAt": 1524702227\n}\n', 'description': 'Return a PII request', 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/pii/requests', 'alternate_path': '/organizations/[organizationId]/pii/requests', 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -X POST -H \'Content-Type: application/json\' --data-binary \'{"type":"delete", "datasets":"["usage","events"]", "mac":"00:77:00:77:00:77"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests\'\n', 'sample_resp': '{\n  "id": "1234",\n  "organizationWide": false,\n  "networkId": "N_1234",\n  "type": "delete",\n  "mac": "00:77:00:77:00:77",\n  "datasets": "[\'usage\', \'events\']",\n  "status": "Not visible in Dashboard; database deletion in process",\n  "createdAt": 1524692227,\n  "completedAt": null\n}\n', 'description': 'Submit a new delete or restrict processing PII request', 'params': [{'name': 'type', 'description': 'One of "delete" or "restrict processing"', 'is_array': False}, {'name': 'datasets', 'description': 'The datasets related to the provided key that should be deleted. Only applies to "delete" requests. The value "all" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)', 'is_array': False}, {'name': 'username', 'description': 'The username of a network log in. Only applies to "delete" requests.', 'is_array': False}, {'name': 'email', 'description': 'The email of a network user account. Only applies to "delete" requests.', 'is_array': False}, {'name': 'mac', 'description': 'The MAC of a network client device. Applies to both "restrict processing" and "delete" requests.', 'is_array': False}, {'name': 'smDeviceId', 'description': 'The sm_device_id of a Systems Manager device. The only way to "restrict processing" or "delete" a Systems Manager device. Must include "device" in the dataset for a "delete" request to destroy the device.', 'is_array': False}, {'name': 'smUserId', 'description': 'The sm_user_id of a Systems Manager user. The only way to "restrict processing" or "delete" a Systems Manager user. Must include "user" in the dataset for a "delete" request to destroy the user.', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/pii/requests/[id]', 'alternate_path': '/organizations/[organizationId]/pii/requests/[id]', 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'", 'sample_resp': '(empty)', 'description': 'Delete a restrict processing PII request', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/organizations/[organizationId]/samlRoles', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'", 'sample_resp': '[\n  {\n    "id": "TEdJIEN1c3RvbWVy",\n    "role": "myrole",\n    "orgAccess": "none",\n    "networks": [\n      {\n        "id": "N_1234",\n        "access": "full"\n      }\n    ],\n    "tags": [\n      {\n        "tag": "west",\n        "access": "read-only"\n      }\n    ]\n  }\n]', 'description': 'List the SAML roles for this organization', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/organizations/[organizationId]/samlRoles/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'", 'sample_resp': '{\n  "id": "TEdJIEN1c3RvbWVy",\n  "role": "myrole",\n  "orgAccess": "none",\n  "networks": [\n    {\n      "id": "N_1234",\n      "access": "full"\n    }\n  ],\n  "tags": [\n    {\n      "tag": "west",\n      "access": "read-only"\n    }\n  ]\n}', 'description': 'Return a SAML role', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/organizations/[organizationId]/samlRoles/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'", 'sample_resp': '{\n  "id": "TEdJIEN1c3RvbWVy",\n  "role": "myrole",\n  "orgAccess": "none",\n  "networks": [\n    {\n      "id": "N_1234",\n      "access": "full"\n    }\n  ],\n  "tags": [\n    {\n      "tag": "west",\n      "access": "read-only"\n    }\n  ]\n}', 'description': 'Update a SAML role', 'params': [{'name': 'role', 'description': 'The role of the SAML administrator', 'is_array': False}, {'name': 'orgAccess', 'description': 'The privilege of the SAML administrator on the organization', 'is_array': False}, {'name': 'tags', 'description': 'The list of tags that the SAML administrator has privileges on', 'is_array': True, 'params': [{'name': 'tag', 'description': 'The name of the tag', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the SAML administrator on the tag', 'is_array': False}]}, {'name': 'networks', 'description': 'The list of networks that the SAML administrator has privileges on', 'is_array': True, 'params': [{'name': 'id', 'description': 'The network ID', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the SAML administrator on the network', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/organizations/[organizationId]/samlRoles', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'", 'sample_resp': '{\n  "id": "TEdJIEN1c3RvbWVy",\n  "role": "myrole",\n  "orgAccess": "none",\n  "networks": [\n    {\n      "id": "N_1234",\n      "access": "full"\n    }\n  ],\n  "tags": [\n    {\n      "tag": "west",\n      "access": "read-only"\n    }\n  ]\n}', 'description': 'Create a SAML role', 'params': [{'name': 'role', 'description': 'The role of the SAML administrator', 'is_array': False}, {'name': 'orgAccess', 'description': 'The privilege of the SAML administrator on the organization', 'is_array': False}, {'name': 'tags', 'description': 'The list of tags that the SAML administrator has privileges on', 'is_array': True, 'params': [{'name': 'tag', 'description': 'The name of the tag', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the SAML administrator on the tag', 'is_array': False}]}, {'name': 'networks', 'description': 'The list of networks that the SAML administrator has privileges on', 'is_array': True, 'params': [{'name': 'id', 'description': 'The network ID', 'is_array': False}, {'name': 'access', 'description': 'The privilege of the SAML administrator on the network', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/organizations/[organizationId]/samlRoles/[id]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'", 'sample_resp': '(empty)', 'description': 'Remove a SAML role', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[clientId]/securityEvents', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/securityEvents?timespan=7200'", 'sample_resp': '[\n  {\n    "mac": "00:11:22:33:44:55",\n    "networkId": "N_24329156"\n  }\n]', 'description': 'List the security events', 'params': [{'name': 'timespan', 'description': 'The timespan, in seconds, to look back from now for events', 'is_array': False}, {'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/sm/namedTagScopes', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes'", 'sample_resp': '[\n  {\n    "id": "1234",\n    "networkId": "N_24329156",\n    "name": "My named tag scope",\n    "scope": "none",\n    "tags": "[]",\n    "type": "Devices"\n  }\n]', 'description': 'List the named tag scopes in this network', 'params': [{'name': 'withDetails', 'description': 'Boolean indicating if the the ids of the apps, profiles, and devices or users scoped by the named tag scope should be included in the response', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]'", 'sample_resp': '{\n  "id": "1234",\n  "networkId": "N_24329156",\n  "name": "My named tag scope",\n  "scope": "none",\n  "tags": "[]",\n  "type": "Devices"\n}', 'description': 'Return a named tag scope', 'params': [{'name': 'withDetails', 'description': 'Boolean indicating if the the ids of the apps, profiles, and devices or users scoped by the named tag scope should be included in the response', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"id":"1234","networkId":"N_24329156","name":"My named tag scope","scope":"none","tags":"[]","type":"Devices"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]\'', 'sample_resp': '{\n  "id": "1234",\n  "networkId": "N_24329156",\n  "name": "My named tag scope",\n  "scope": "none",\n  "tags": "[]",\n  "type": "Devices"\n}', 'description': 'Update a named tag scope', 'params': [{'name': 'name', 'description': 'The name of this tag scope', 'is_array': False}, {'name': 'scope', 'description': 'The scope and tag options of the named tag scope. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none followed by tags', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/sm/namedTagScopes', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"id":"1234","networkId":"N_24329156","name":"My named tag scope","scope":"none","tags":"[]","type":"Devices"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes\'', 'sample_resp': '{\n  "id": "1234",\n  "networkId": "N_24329156",\n  "name": "My named tag scope",\n  "scope": "none",\n  "tags": "[]",\n  "type": "Devices"\n}', 'description': 'Add a named_tag_scope', 'params': [{'name': 'name', 'description': 'The name of this tag scope', 'is_array': False}, {'name': 'scope', 'description': 'The scope and tag options of the named tag scope. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none followed by tags', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]'", 'sample_resp': '(empty)', 'description': 'Delete a named tag scope from a network', 'params': None, 'successful_http_status': 204},
{'http_method': 'POST', 'path': '/networks/[network_id]/sm/profile/clarity', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X POST \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "name=Cisco Clarity Config" \\\n  -F "PluginBundleID=com.cisco.security.app" \\\n  -F \'VendorConfig=[ {"key":"cloud_asn1_server_host", "type":"manual_string", "value":"immunet.com"}, {"key":"cloud_asn1_server_port", "type":"manual_int", "value":443} ]\' \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Create a new profile containing a Cisco Clarity payload', 'params': [{'name': 'name', 'description': 'The name to be given to the new profile', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'PluginBundleID', 'description': 'The bundle ID of the application, defaults to com.cisco.ciscosecurity.app', 'is_array': False}, {'name': 'FilterBrowsers', 'description': 'Whether or not to enable browser traffic filtering (one of true, false). Default true.', 'is_array': False}, {'name': 'FilterSockets', 'description': 'Whether or not to enable socket traffic filtering (one of true, false). Default true.', 'is_array': False}, {'name': 'VendorConfig', 'description': 'The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/profile/clarity/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X PUT \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "name=Cisco Clarity Config" \\\n  -F \'VendorConfig=[ {"key":"cloud_asn1_server_host", "type":"manual_string", "value":"immunet.com"}, {"key":"cloud_asn1_server_port", "type":"manual_int", "value":443} ]\' \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Update an existing profile containing a Cisco Clarity payload', 'params': [{'name': 'name', 'description': 'optional: A new name for the profile', 'is_array': False}, {'name': 'scope', 'description': 'optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'PluginBundleID', 'description': 'optional: The new bundle ID of the application', 'is_array': False}, {'name': 'FilterBrowsers', 'description': 'optional: Whether or not to enable browser traffic filtering (one of true, false).', 'is_array': False}, {'name': 'FilterSockets', 'description': 'optional: Whether or not to enable socket traffic filtering (one of true, false).', 'is_array': False}, {'name': 'VendorConfig', 'description': 'optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[network_id]/sm/profile/clarity/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X POST \\\n  -H "Content-Type: multipart/form-data" \\\n  -F \'VendorConfig=[ {"key":"cloud_asn1_server_host", "type":"manual_string", "value":"immunet.com"}, {"key":"cloud_asn1_server_port", "type":"manual_int", "value":443} ]\' \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Add a Cisco Clarity payload to an existing profile', 'params': [{'name': 'PluginBundleID', 'description': 'The bundle ID of the application, defaults to com.cisco.ciscosecurity.app', 'is_array': False}, {'name': 'FilterBrowsers', 'description': 'Whether or not to enable browser traffic filtering (one of true, false).', 'is_array': False}, {'name': 'FilterSockets', 'description': 'Whether or not to enable socket traffic filtering (one of true, false).', 'is_array': False}, {'name': 'VendorConfig', 'description': 'The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/profile/clarity/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X GET \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]"\n', 'sample_resp': '{\n  "profile_id": 12345\n  "name": "Clarity Profile",\n  "FilterBrowsers": true,\n  "FilterSockets": true,\n  "VendorConfig": [ {"key":"cloud_asn1_server_host", "type":"manual_string", "value":"immunet.com"}, {"key":"cloud_asn1_server_port", "type":"manual_int", "value":443} ],\n  "PluginBundleID": "com.cisco.ciscosecurity.app"\n}\n', 'description': 'Get details for a Cisco Clarity payload', 'params': None, 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[network_id]/sm/profile/clarity/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X DELETE \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "payload_deleted": true,\n  "profile_deleted": true\n}\n', 'description': "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.", 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[network_id]/sm/profile/umbrella', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X POST \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "name=Cisco Umbrella Config" \\\n  -F "AppBundleIdentifier=com.cisco.security" \\\n  -F "ProviderBundleIdentifier=com.cisco.umbrella" \\\n  -F \'ProviderConfiguration=[ {"key":"internalDomains", "type":"manual_list", "value":["meraki.com", "cisco.com"] }, {"key":"user_id", "type":"manual_string", "value":"miles"} ]\' \\\n  -F "usesCert=true" \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Create a new profile containing a Cisco Umbrella payload', 'params': [{'name': 'name', 'description': 'The name to be given to the new profile', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'AppBundleIdentifier', 'description': 'The bundle ID of the application, defaults to com.cisco.ciscosecurity.app', 'is_array': False}, {'name': 'ProviderBundleIdentifier', 'description': 'The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella', 'is_array': False}, {'name': 'ProviderConfiguration', 'description': 'The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}, {'name': 'usesCert', 'description': 'Whether the certificate should be attached to this profile (one of true, false).', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/profile/umbrella/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X PUT \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "name=Cisco Umbrella Config" \\\n  -F \'ProviderConfiguration=[ {"key":"internalDomains", "type":"manual_list", "value":["meraki.com", "cisco.com"] }, {"key":"user_id", "type":"manual_string", "value":"miles"} ]\' \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Update an existing profile containing a Cisco Umbrella payload', 'params': [{'name': 'name', 'description': 'optional: A new name for the profile', 'is_array': False}, {'name': 'scope', 'description': 'optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'AppBundleIdentifier', 'description': 'optional: The bundle ID of the application', 'is_array': False}, {'name': 'ProviderBundleIdentifier', 'description': 'optional: The bundle ID of the provider', 'is_array': False}, {'name': 'ProviderConfiguration', 'description': 'optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}, {'name': 'usesCert', 'description': 'Whether the certificate should be attached to this profile (one of true, false). False by default.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[network_id]/sm/profile/umbrella/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X POST \\\n  -H "Content-Type: multipart/form-data" \\\n  -F \'ProviderConfiguration=[ {"key":"internalDomains", "type":"manual_list", "value":["meraki.com", "cisco.com"] }, {"key":"user_id", "type":"manual_string", "value":"miles"} ]\' \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "profile_id": 12345\n}\n', 'description': 'Add a Cisco Umbrella payload to an existing profile', 'params': [{'name': 'AppBundleIdentifier', 'description': 'The bundle ID of the application, defaults to com.cisco.ciscosecurity.app', 'is_array': False}, {'name': 'ProviderBundleIdentifier', 'description': 'The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella', 'is_array': False}, {'name': 'ProviderConfiguration', 'description': 'The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { "key": "some_key", type: "some_type", "value": "some_value" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n', 'is_array': False}, {'name': 'usesCert', 'description': 'Whether the certificate should be attached to this profile (one of true, false). False by default.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/profile/umbrella/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X GET \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]"\n', 'sample_resp': '{\n  "profile_id": 12345\n  "name": "Umbrella Profile",\n  "ProviderConfiguration": [ {"key":"internalDomains", "type":"manual_list", "value":["meraki.com", "cisco.com"] }, {"key":"user_id", "type":"manual_string", "value":"miles"} ],\n  "AppBundleIdentifier": "com.cisco.ciscosecurity.app",\n  "ProviderBundleIdentifier": "com.cisco.ciscosecurity.app.CiscoUmbrella"\n}\n', 'description': 'Get details for a Cisco Umbrella payload', 'params': None, 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[network_id]/sm/profile/umbrella/[profileId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X GET \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]"\n', 'sample_resp': '{\n  "success": true,\n  "payload_deleted": true,\n  "profile_deleted": true\n}\n', 'description': "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload", 'params': None, 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[network_id]/sm/app/polaris', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X POST \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "manifestUrl=https://website.com/assets/manifest.plist" \\\n  -F "preventAutoInstall=true" \\\n  -F "usesVPP=true" \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris"\n', 'sample_resp': '{\n  "success": true,\n  "app_id": 123456,\n  "bundle_id": "com.cisco.polaris",\n  "scope": "withAny",\n  "tags": "polaris_devices",\n  "prevent_auto_install": true,\n  "uses_vpp": true\n}\n', 'description': 'Create a new Polaris app', 'params': [{'name': 'scope', 'description': 'The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'manifestUrl', 'description': 'The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)', 'is_array': False}, {'name': 'bundleId', 'description': 'The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)', 'is_array': False}, {'name': 'preventAutoInstall', 'description': '(optional) Whether or not SM should auto-install this app (one of true or false). False by default.', 'is_array': False}, {'name': 'usesVPP', 'description': '(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/app/polaris/[appId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X PUT \\\n  -H "Content-Type: multipart/form-data" \\\n  -F "scope=withAny, tag1, tag2" \\\n  -F "preventAutoInstall=true" \\\n  -F "usesVPP=true" \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]"\n', 'sample_resp': '{\n  "success": true,\n  "app_id": 123456,\n  "bundle_id": "com.cisco.polaris",\n  "scope": "withAny",\n  "tags": "polaris_devices",\n  "prevent_auto_install": true,\n  "uses_vpp": true\n}\n', 'description': 'Update an existing Polaris app', 'params': [{'name': 'scope', 'description': 'The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned', 'is_array': False}, {'name': 'preventAutoInstall', 'description': 'Whether or not SM should auto-install this app (one of true or false). False by default.', 'is_array': False}, {'name': 'usesVPP', 'description': 'Whether or not the app should use VPP by device assignment (one of true or false). False by default.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/app/polaris', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X GET \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris?bundleId=com.cisco.polaris"\n', 'sample_resp': '{\n  "app_id": 123456,\n  "bundle_id": "com.cisco.polaris",\n  "scope": withAll,\n  "tags": test, test2,\n  "prevent_auto_install": true,\n  "uses_vpp": true\n}\n', 'description': 'Get details for a Cisco Polaris app if it exists', 'params': [{'name': 'bundleId', 'description': 'The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'DELETE', 'path': '/networks/[network_id]/sm/app/polaris/[appId]', 'alternate_path': None, 'sample_req': 'curl -L -H "X-Cisco-Meraki-API-KEY: <key>" \\\n  -X DELETE \\\n  "https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]"\n', 'sample_resp': '{\n  "success": true\n}\n', 'description': 'Delete a Cisco Polaris app', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/devices', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices'", 'sample_resp': '[\n  {\n    "devices": [\n      {\n        "id": "1284392014819",\n        "name": "Miles\'s phone",\n        "tags": [\n          "tag1",\n          "tag2"\n        ],\n        "ssid": "My SSID",\n        "wifiMac": "00:11:22:33:44:55",\n        "osName": "iOS 9.3.5",\n        "systemModel": "iPhone",\n        "uuid": "3d990628ede4c628d52",\n        "serialNumber": "F5XKHEBX",\n        "ip": "1.2.3.4"\n      }\n    ],\n    "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"\n  }\n]', 'description': 'List the devices enrolled in an SM network with various specified fields and filters', 'params': [{'name': 'fields', 'description': 'Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n      The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n      systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n      ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n      simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n      isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n      hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.', 'is_array': False}, {'name': 'wifiMacs', 'description': 'Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.', 'is_array': False}, {'name': 'serials', 'description': 'Filter devices by serial(s). Multiple serials can be passed in as comma separated values.', 'is_array': False}, {'name': 'ids', 'description': 'Filter devices by id(s). Multiple ids can be passed in as comma separated values.', 'is_array': False}, {'name': 'scope', 'description': 'Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.', 'is_array': False}, {'name': 'batchToken', 'description': 'On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n      If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n      the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n      additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n      passed in with the batchToken will be ignored.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/users', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/users'", 'sample_resp': '{\n  "id": "1234",\n  "email": "miles@meraki.com",\n  "fullName": "Miles Meraki",\n  "username": "",\n  "hasPassword": false,\n  "tags": [\n    "tag1",\n    "tag2"\n  ],\n  "adGroups": [\n\n  ],\n  "asmGroups": [\n\n  ],\n  "isExternal": false,\n  "displayName": "Miles Meraki <miles@meraki.com>",\n  "hasIdentityCertificate": false,\n  "userThumbnail": "https://s3.amazonaws.com/image.extension"\n}', 'description': 'List the owners in an SM network with various specified fields and filters', 'params': [{'name': 'usernames', 'description': 'Filter users by username(s). Multiple usernames can be passed in as comma separated values.', 'is_array': False}, {'name': 'emails', 'description': 'Filter users by email(s). Multiple emails can be passed in as comma separated values.', 'is_array': False}, {'name': 'ids', 'description': 'Filter users by id(s). Multiple ids can be passed in as comma separated values.', 'is_array': False}, {'name': 'scope', 'description': 'Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/user/[id]/deviceProfiles', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/deviceProfiles'", 'sample_resp': '[\n  {\n    "id": "1284392014819",\n    "isEncrypted": true,\n    "isManaged": true,\n    "profileData": {\n\n    },\n    "profileIdentifier": "com.test.app",\n    "name": "My profile",\n    "version": "0.0.1"\n  }\n]', 'description': 'Get the profiles associated with a user', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/deviceProfiles', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceProfiles'", 'sample_resp': '[\n  {\n    "id": "1284392014819",\n    "isEncrypted": true,\n    "isManaged": true,\n    "profileData": {\n\n    },\n    "profileIdentifier": "com.test.app",\n    "name": "My profile",\n    "version": "0.0.1"\n  }\n]', 'description': 'Get the profiles associated with a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/user/[id]/softwares', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/softwares'", 'sample_resp': '[\n  {\n    "bundleSize": null,\n    "createdAt": "2018-02-11T00:00:00Z",\n    "dynamicSize": null,\n    "id": "1284392014819",\n    "identifier": "com.test.app",\n    "installedAt": "2018-05-12T00:00:00Z",\n    "toInstall": null,\n    "iosRedemptionCode": null,\n    "isManaged": true,\n    "itunesId": null,\n    "licenseKey": null,\n    "name": "My app",\n    "path": "/Path/to/app.app",\n    "redemptionCode": null,\n    "shortVersion": null,\n    "status": null,\n    "toUninstall": false,\n    "uninstalledAt": null,\n    "updatedAt": "2018-05-12T00:00:00Z",\n    "vendor": "Apple",\n    "version": "0.1"\n  }\n]', 'description': 'Get a list of softwares associated with a user', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/softwares', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/softwares'", 'sample_resp': '[\n  {\n    "bundleSize": null,\n    "createdAt": "2018-02-11T00:00:00Z",\n    "dynamicSize": null,\n    "id": "1284392014819",\n    "identifier": "com.test.app",\n    "installedAt": "2018-05-12T00:00:00Z",\n    "toInstall": null,\n    "iosRedemptionCode": null,\n    "isManaged": true,\n    "itunesId": null,\n    "licenseKey": null,\n    "name": "My app",\n    "path": "/Path/to/app.app",\n    "redemptionCode": null,\n    "shortVersion": null,\n    "status": null,\n    "toUninstall": false,\n    "uninstalledAt": null,\n    "updatedAt": "2018-05-12T00:00:00Z",\n    "vendor": "Apple",\n    "version": "0.1"\n  }\n]', 'description': 'Get a list of softwares associated with a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/networkAdapters', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/networkAdapters'", 'sample_resp': '[\n  {\n    "dhcpServer": "123.123.123.1",\n    "dnsServer": "8.8.8.8, 8.8.4.4",\n    "gateway": "1.2.3.5",\n    "id": "1284392014819",\n    "ip": "1.2.3.4",\n    "mac": "00:11:22:33:44:55",\n    "name": "en0",\n    "subnet": "255.255.255.0"\n  }\n]', 'description': 'List the network adapters of a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/wlanLists', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/wlanLists'", 'sample_resp': '[\n  {\n    "createdAt": "2018-02-11T00:00:00Z",\n    "id": "1284392014819",\n    "xml": "Preferred networks on en0:"\n  }\n]', 'description': 'List the saved SSID names on a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/securityCenters', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/securityCenters'", 'sample_resp': '[\n  {\n    "isRooted": true,\n    "hasAntiVirus": true,\n    "antiVirusName": "meraki_av",\n    "isFireWallEnabled": true,\n    "hasFireWallInstalled": true,\n    "fireWallName": "meraki_fw",\n    "isDiskEncrypted": true,\n    "isAutoLoginDisabled": true,\n    "id": "1284392014819",\n    "runningProcs": "/software,/software_2"\n  }\n]', 'description': 'List the security centers on a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/restrictions', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/restrictions'", 'sample_resp': '[\n  {\n    "profile": "com.meraki.sm.1",\n    "restrictions": {\n      "myRestriction": {\n        "value": true\n      }\n    }\n  }\n]', 'description': 'List the restrictions on a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/certs', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/certs'", 'sample_resp': '[\n  {\n    "name": "My Cert",\n    "notValidAfter": "May 12, 2018",\n    "notValidBefore": "Feb 11, 2018",\n    "certPem": "-----BEGIN CERTIFICATE-----\\n-----END CERTIFICATE-----\\n",\n    "issuer": "",\n    "subject": "",\n    "id": 15\n  }\n]', 'description': 'List the certs on a device', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/devices/tags', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"scope":"withAny, old_tag","updateAction":"add","tags":"tag1,tag2"}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/tags\'', 'sample_resp': '{\n  "success": [\n    {\n      "id": "1284392014819",\n      "serial": "F5XKHEBX",\n      "wifiMac": "00:11:22:33:44:55",\n      "tags": [\n        "tag1",\n        "tag2"\n      ]\n    }\n  ]\n}', 'description': 'Add, delete, or update the tags of a set of devices', 'params': [{'name': 'wifiMacs', 'description': 'The wifiMacs of the devices to be modified.', 'is_array': False}, {'name': 'ids', 'description': 'The ids of the devices to be modified.', 'is_array': False}, {'name': 'serials', 'description': 'The serials of the devices to be modified.', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.', 'is_array': False}, {'name': 'tags', 'description': 'The tags to be added, deleted, or updated.', 'is_array': False}, {'name': 'updateAction', 'description': 'One of add, delete, or update. Only devices that have been modified will be returned.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/device/fields', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"id":"1284392014819","deviceFields":{"name":"My name"}}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/fields\'', 'sample_resp': '{\n  "success": [\n    {\n      "id": "1284392014819",\n      "serial": "F5XKHEBX",\n      "wifiMac": "00:11:22:33:44:55",\n      "name": "My name"\n    }\n  ]\n}', 'description': 'Modify the fields of a device', 'params': [{'name': 'wifiMac', 'description': 'The wifiMac of the device to be modified.', 'is_array': False}, {'name': 'id', 'description': 'The id of the device to be modified.', 'is_array': False}, {'name': 'serial', 'description': 'The serial of the device to be modified.', 'is_array': False}, {'name': 'deviceFields', 'description': 'The new fields of the device. Passed in as a JSON object. The list of available fields are: name, notes', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/devices/lock', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"ids":"\\"1284392014819\\""}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/lock\'', 'sample_resp': '{\n  "success": true\n}', 'description': 'Lock a set of devices', 'params': [{'name': 'wifiMacs', 'description': 'The wifiMacs of the devices to be locked.', 'is_array': False}, {'name': 'ids', 'description': 'The ids of the devices to be locked.', 'is_array': False}, {'name': 'serials', 'description': 'The serials of the devices to be locked.', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.', 'is_array': False}, {'name': 'pin', 'description': 'The pin number for locking macOS devices (a six digit number). Required only for macOS devices.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/device/wipe', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"id":"1284392014819"}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/wipe\'', 'sample_resp': '{\n  "success": true\n}', 'description': 'Wipe a device', 'params': [{'name': 'wifiMac', 'description': 'The wifiMac of the device to be wiped.', 'is_array': False}, {'name': 'id', 'description': 'The id of the device to be wiped.', 'is_array': False}, {'name': 'serial', 'description': 'The serial of the device to be wiped.', 'is_array': False}, {'name': 'pin', 'description': 'The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/devices/checkin', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"ids":"\\"1284392014819\\""}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/checkin\'', 'sample_resp': '{\n  "success": true\n}', 'description': 'Force check-in a set of devices', 'params': [{'name': 'wifiMacs', 'description': 'The wifiMacs of the devices to be checked-in.', 'is_array': False}, {'name': 'ids', 'description': 'The ids of the devices to be checked-in.', 'is_array': False}, {'name': 'serials', 'description': 'The serials of the devices to be checked-in.', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[network_id]/sm/devices/move', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"ids":"\\"1284392014819\\"","newNetwork":"N_24329156"}\' \'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/move\'', 'sample_resp': '{\n  "success": true\n}', 'description': 'Move a set of devices to a new network', 'params': [{'name': 'wifiMacs', 'description': 'The wifiMacs of the devices to be moved.', 'is_array': False}, {'name': 'ids', 'description': 'The ids of the devices to be moved.', 'is_array': False}, {'name': 'serials', 'description': 'The serials of the devices to be moved.', 'is_array': False}, {'name': 'scope', 'description': 'The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.', 'is_array': False}, {'name': 'newNetwork', 'description': 'The new network to which the devices will be moved.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/profiles', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/profiles'", 'sample_resp': '{\n  "profiles": [\n    {\n      "id": "1234",\n      "payload_display_name": "API Profile",\n      "payload_identifier": "com.meraki.sm.1",\n      "payload_description": "API docs test",\n      "scope": "some",\n      "tags": [\n        "tag1",\n        "tag2"\n      ],\n      "wifis": [\n\n      ],\n      "payload_types": [\n        "Privacy",\n        "Document"\n      ]\n    }\n  ]\n}', 'description': 'List all the profiles in the network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/cellularUsageHistory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/cellularUsageHistory'", 'sample_resp': '{\n  "sent": 138.0,\n  "recv": 61.0,\n  "ts": 1526087474\n}', 'description': "Return the client's daily cellular data usage history. Usage data is in kilobytes.", 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/performanceHistory', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/performanceHistory'", 'sample_resp': '[\n  {\n    "cpuPercentUsed": 0.95,\n    "memFree": 1024,\n    "memWired": 4096,\n    "memActive": 1024,\n    "memInactive": 2048,\n    "networkSent": 512,\n    "networkReceived": 512,\n    "swapUsed": 768,\n    "diskUsage": {\n      "c": {\n        "used": 2048,\n        "space": 9096\n      }\n    },\n    "ts": 1526087474.0\n  }\n]', 'description': 'Return historical records of various Systems Manager client metrics for desktop devices.', 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/desktopLogs', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/desktopLogs'", 'sample_resp': '[\n  {\n    "measuredAt": 1526087474.0,\n    "user": "milesmeraki",\n    "networkDevice": "NIC",\n    "networkDriver": "Driver",\n    "wifiChannel": "11",\n    "wifiAuth": "wpa-psk",\n    "wifiBssid": "00:11:22:33:44:55",\n    "wifiSsid": "ssid",\n    "wifiRssi": "-11",\n    "wifiNoise": "-99",\n    "dhcpServer": "1.2.3.4",\n    "ip": "1.2.3.4",\n    "networkMTU": "1500",\n    "subnet": "192.168.1.0/24",\n    "gateway": "1.2.3.5",\n    "publicIP": "123.123.123.1",\n    "dnsServer": "8",\n    "ts": 1526087474.0\n  }\n]', 'description': 'Return historical records of various Systems Manager network connection details for desktop devices.', 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/deviceCommandLogs', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceCommandLogs'", 'sample_resp': '{\n  "action": "UpdateProfile",\n  "name": "My profile",\n  "details": "{}",\n  "dashboardUser": "Miles Meraki",\n  "ts": 1526087474.0\n}', 'description': '    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n', 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[network_id]/sm/[id]/connectivity', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/connectivity'", 'sample_resp': '{\n  "firstSeenAt": 1518365681.0,\n  "lastSeenAt": 1526087474.0\n}', 'description': 'Returns historical connectivity data (whether a device is regularly checking in to Dashboard).', 'params': [{'name': 'perPage', 'description': 'The number of entries per page returned', 'is_array': False}, {'name': 'startingAfter', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}, {'name': 'endingBefore', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[id]/splashLoginAttempts', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/splashLoginAttempts?timespan=7200'", 'sample_resp': '[\n  {\n    "name": "Miles Meraki",\n    "login": "miles@meraki.com",\n    "ssid": "My SSID",\n    "loginAt": 1518365681,\n    "gatewayDeviceMac": "00:11:22:33:44:55",\n    "clientMac": "22:33:44:55:66:77",\n    "clientId": "k74272e",\n    "authorization": "success"\n  }\n]', 'description': 'List the splash login attempts for a network', 'params': [{'name': 'ssidNumber', 'description': 'Only return the login attempts for the specified SSID', 'is_array': False}, {'name': 'loginIdentifier', 'description': 'The username, email, or phone number used during login', 'is_array': False}, {'name': 'timespan', 'description': 'The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/ssids/[number]/splashSettings', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings'", 'sample_resp': '{\n  "ssidNumber": 0,\n  "splashPage": "Click-through splash page",\n  "splashUrl": "https://www.custom_splash_url.com",\n  "useSplashUrl": true\n}', 'description': 'Display the splash page settings for the given SSID', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/ssids/[number]/splashSettings', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"splashUrl":"https://www.custom_splash_url.com","useSplashUrl":true}\' \'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings\'', 'sample_resp': '{\n  "ssidNumber": 0,\n  "splashPage": "Click-through splash page",\n  "splashUrl": "https://www.custom_splash_url.com",\n  "useSplashUrl": true\n}', 'description': 'Modify the splash page settings for the given SSID', 'params': [{'name': 'splashUrl', 'description': "The custom splash URL of the click-through splash page. Optional. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'", 'is_array': False}, {'name': 'useSplashUrl', 'description': "Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Optional. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/ssids', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids'", 'sample_resp': '[\n  {\n    "number": 0,\n    "name": "My SSID",\n    "enabled": true,\n    "splashPage": "Click-through splash page",\n    "ssidAdminAccessible": false,\n    "authMode": "open",\n    "ipAssignmentMode": "NAT mode",\n    "bandSelection": "5 GHz band only",\n    "perClientBandwidthLimitUp": 0,\n    "perClientBandwidthLimitDown": 0\n  }\n]', 'description': 'List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/ssids/[number]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'", 'sample_resp': '{\n  "number": 0,\n  "name": "My SSID",\n  "enabled": true,\n  "splashPage": "Click-through splash page",\n  "ssidAdminAccessible": false,\n  "authMode": "open",\n  "ipAssignmentMode": "NAT mode",\n  "bandSelection": "5 GHz band only",\n  "perClientBandwidthLimitUp": 0,\n  "perClientBandwidthLimitDown": 0\n}', 'description': 'Return a single SSID', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/ssids/[number]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My SSID","enabled":true}\' \'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]\'', 'sample_resp': '{\n  "number": 0,\n  "name": "My SSID",\n  "enabled": true,\n  "splashPage": "Click-through splash page",\n  "ssidAdminAccessible": false,\n  "authMode": "open",\n  "ipAssignmentMode": "NAT mode",\n  "bandSelection": "5 GHz band only",\n  "perClientBandwidthLimitUp": 0,\n  "perClientBandwidthLimitDown": 0\n}', 'description': 'Update the attributes of an SSID', 'params': [{'name': 'name', 'description': 'The name of an SSID', 'is_array': False}, {'name': 'enabled', 'description': 'Whether or not an SSID is enabled', 'is_array': False}, {'name': 'authMode', 'description': "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')", 'is_array': False}, {'name': 'encryptionMode', 'description': "The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')", 'is_array': False}, {'name': 'psk', 'description': "The passkey for the SSID. This param is only valid if the authMode is 'psk'", 'is_array': False}, {'name': 'wpaEncryptionMode', 'description': "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')", 'is_array': False}, {'name': 'splashPage', 'description': "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest'). This attribute is not supported for template children.", 'is_array': False}, {'name': 'radiusServers', 'description': "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'", 'is_array': True, 'params': [{'name': 'host', 'description': 'IP address of your RADIUS server', 'is_array': False}, {'name': 'port', 'description': 'UDP port the RADIUS server listens on for Access-requests', 'is_array': False}, {'name': 'secret', 'description': 'RADIUS client shared secret', 'is_array': False}]}, {'name': 'radiusCoaEnabled', 'description': 'If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.', 'is_array': False}, {'name': 'radiusFailoverPolicy', 'description': "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access', 'Allow access')", 'is_array': False}, {'name': 'radiusLoadBalancingPolicy', 'description': "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order', 'Round robin')", 'is_array': False}, {'name': 'radiusAccountingEnabled', 'description': "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'", 'is_array': False}, {'name': 'radiusAccountingServers', 'description': "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'", 'is_array': True, 'params': [{'name': 'host', 'description': 'IP address to which the APs will send RADIUS accounting messages', 'is_array': False}, {'name': 'port', 'description': 'Port on the RADIUS server that is listening for accounting messages', 'is_array': False}, {'name': 'secret', 'description': 'Shared key used to authenticate messages between the APs and RADIUS server', 'is_array': False}]}, {'name': 'ipAssignmentMode', 'description': "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')", 'is_array': False}, {'name': 'useVlanTagging', 'description': "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'", 'is_array': False}, {'name': 'concentratorNetworkId', 'description': "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.", 'is_array': False}, {'name': 'vlanId', 'description': "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'", 'is_array': False}, {'name': 'defaultVlanId', 'description': "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'", 'is_array': False}, {'name': 'apTagsAndVlanIds', 'description': "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'", 'is_array': True, 'params': [{'name': 'tags', 'description': 'Comma-separated list of AP tags', 'is_array': False}, {'name': 'vlanId', 'description': 'Numerical identifier that is assigned to the VLAN', 'is_array': False}]}, {'name': 'walledGardenEnabled', 'description': 'Allow access to a configurable list of IP ranges, which users may access prior to sign-on.', 'is_array': False}, {'name': 'walledGardenRanges', 'description': "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.", 'is_array': False}, {'name': 'minBitrate', 'description': 'The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)', 'is_array': False}, {'name': 'bandSelection', 'description': 'The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)', 'is_array': False}, {'name': 'perClientBandwidthLimitUp', 'description': 'The upload bandwidth limit in Kbps. (0 represents no limit.)', 'is_array': False}, {'name': 'perClientBandwidthLimitDown', 'description': 'The download bandwidth limit in Kbps. (0 represents no limit.)', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/switch/settings', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings'", 'sample_resp': '{\n  "networkId": "N_24329156",\n  "useCombinedPower": false,\n  "powerExceptions": [\n    {\n      "serial": "Q234-ABCD-0001",\n      "powerType": "redundant"\n    },\n    {\n      "serial": "Q234-ABCD-0002",\n      "powerType": "combined"\n    },\n    {\n      "serial": "Q234-ABCD-0003",\n      "powerType": "redundant"\n    }\n  ]\n}', 'description': 'Returns the switch network settings', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/switch/settings', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"useCombinedPower":true,"powerExceptions":[{"serial":"Q234-ABCD-0001","powerType":"redundant"},{"serial":"Q234-ABCD-0002","powerType":"combined"},{"serial":"Q234-ABCD-0003","powerType":"combined"},{"serial":"Q234-ABCD-0004","powerType":"useNetworkSetting"}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings\'', 'sample_resp': '{\n  "useCombinedPower": true,\n  "powerExceptions": [\n    {\n      "serial": "Q234-ABCD-0001",\n      "powerType": "redundant"\n    },\n    {\n      "serial": "Q234-ABCD-0002",\n      "powerType": "combined"\n    },\n    {\n      "serial": "Q234-ABCD-0003",\n      "powerType": "combined"\n    },\n    {\n      "serial": "Q234-ABCD-0004",\n      "powerType": "useNetworkSetting"\n    }\n  ]\n}', 'description': 'Update switch network settings', 'params': [{'name': 'useCombinedPower', 'description': 'The behavior of secondary power supplies on supported devices ("redundant", "combined")', 'is_array': False}, {'name': 'powerExceptions', 'description': 'Exceptions on a per switch basis to "useCombinedPower"', 'is_array': True, 'params': [{'name': 'serial', 'description': 'Serial number of the switch', 'is_array': False}, {'name': 'powerType', 'description': 'Per switch exception (combined, redundant, useNetworkSetting)', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/switchPorts', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts'", 'sample_resp': '[\n  {\n    "number": 1,\n    "name": "My switch port",\n    "tags": "tag1 tag2",\n    "enabled": true,\n    "poeEnabled": true,\n    "type": "access",\n    "vlan": 10,\n    "voiceVlan": 20,\n    "isolationEnabled": false,\n    "rstpEnabled": true,\n    "stpGuard": "disabled",\n    "accessPolicyNumber": "1234",\n    "linkNegotiation": "Auto negotiate"\n  }\n]', 'description': 'List the switch ports for a switch', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/devices/[serial]/switchPorts/[number]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'", 'sample_resp': '{\n  "number": 1,\n  "name": "My switch port",\n  "tags": "tag1 tag2",\n  "enabled": true,\n  "poeEnabled": true,\n  "type": "access",\n  "vlan": 10,\n  "voiceVlan": 20,\n  "isolationEnabled": false,\n  "rstpEnabled": true,\n  "stpGuard": "disabled",\n  "accessPolicyNumber": "1234",\n  "linkNegotiation": "Auto negotiate"\n}', 'description': 'Return a switch port', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/devices/[serial]/switchPorts/[number]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'", 'sample_resp': '{\n  "number": 1,\n  "name": "My switch port",\n  "tags": "tag1 tag2",\n  "enabled": true,\n  "poeEnabled": true,\n  "type": "access",\n  "vlan": 10,\n  "voiceVlan": 20,\n  "isolationEnabled": false,\n  "rstpEnabled": true,\n  "stpGuard": "disabled",\n  "accessPolicyNumber": "1234",\n  "linkNegotiation": "Auto negotiate"\n}', 'description': 'Update a switch port', 'params': [{'name': 'name', 'description': 'The name of the switch port', 'is_array': False}, {'name': 'tags', 'description': 'The tags of the switch port', 'is_array': False}, {'name': 'enabled', 'description': 'The status of the switch port', 'is_array': False}, {'name': 'type', 'description': 'The type of the switch port ("access" or "trunk")', 'is_array': False}, {'name': 'vlan', 'description': 'The VLAN of the switch port', 'is_array': False}, {'name': 'voiceVlan', 'description': 'The voice VLAN of the switch port. Only applicable to access ports.', 'is_array': False}, {'name': 'allowedVlans', 'description': 'The VLANs allowed on the switch port. Only applicable to trunk ports.', 'is_array': False}, {'name': 'poeEnabled', 'description': 'The PoE status of the switch port', 'is_array': False}, {'name': 'isolationEnabled', 'description': 'The isolation status of the switch port', 'is_array': False}, {'name': 'rstpEnabled', 'description': 'The rapid spanning tree protocol status', 'is_array': False}, {'name': 'stpGuard', 'description': 'The state of the STP guard ("disabled", "Root guard", "BPDU guard", "Loop guard")', 'is_array': False}, {'name': 'accessPolicyNumber', 'description': 'The number of the access policy of the switch port. Only applicable to access ports.', 'is_array': False}, {'name': 'linkNegotiation', 'description': 'The link speed for the switch port', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/syslogServers', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers'", 'sample_resp': '[\n  {\n    "host": "1.2.3.4",\n    "port": 443,\n    "roles": [\n      "Wireless event log",\n      "URLs"\n    ]\n  }\n]', 'description': 'List the syslog servers for a network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/syslogServers', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"servers":[{"host":"1.2.3.4","port":443,"roles":["Wireless event log","URLs"]}]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers\'', 'sample_resp': '[\n  {\n    "host": "1.2.3.4",\n    "port": 443,\n    "roles": [\n      "Wireless event log",\n      "URLs"\n    ]\n  }\n]', 'description': 'Update the syslog servers for a network', 'params': [{'name': 'servers', 'description': 'A list of the syslog servers for this network', 'is_array': True, 'params': [{'name': 'host', 'description': 'The IP address of the syslog server', 'is_array': False}, {'name': 'port', 'description': 'The port of the syslog server', 'is_array': False}, {'name': 'roles', 'description': "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'", 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/contentFiltering/categories', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering/categories'", 'sample_resp': '{\n  "categories": [\n    {\n      "id": "meraki:contentFiltering/category/1",\n      "name": "Real Estate"\n    },\n    {\n      "id": "meraki:contentFiltering/category/3",\n      "name": "Financial Services"\n    },\n    "...",\n    {\n      "id": "meraki:contentFiltering/category/11",\n      "name": "Adult and Pornography"\n    }\n  ]\n}', 'description': 'List all available content filtering categories for an MX network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/contentFiltering', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering'", 'sample_resp': '{\n  "allowedUrlPatterns": [\n    "http://www.example.org",\n    "http://help.com.au"\n  ],\n  "blockedUrlPatterns": [\n    "http://www.example.com",\n    "http://www.betting.com"\n  ],\n  "blockedUrlCategories": [\n    {\n      "id": "meraki:contentFiltering/category/1",\n      "name": "Real Estate"\n    },\n    {\n      "id": "meraki:contentFiltering/category/7",\n      "name": "Shopping"\n    }\n  ],\n  "urlCategoryListSize": "topSites"\n}', 'description': 'Return the content filtering settings for an MX network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/contentFiltering', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"allowedUrlPatterns":["http://www.example.org","http://help.com.au"],"blockedUrlPatterns":["http://www.example.com","http://www.betting.com"],"blockedUrlCategories":["meraki:contentFiltering/category/1","meraki:contentFiltering/category/7"],"urlCategoryListSize":"topSites"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering\'', 'sample_resp': '{\n  "allowedUrlPatterns": [\n    "http://www.example.org",\n    "http://help.com.au"\n  ],\n  "blockedUrlPatterns": [\n    "http://www.example.com",\n    "http://www.betting.com"\n  ],\n  "blockedUrlCategories": [\n    {\n      "id": "meraki:contentFiltering/category/1",\n      "name": "Real Estate"\n    },\n    {\n      "id": "meraki:contentFiltering/category/7",\n      "name": "Shopping"\n    }\n  ],\n  "urlCategoryListSize": "topSites"\n}', 'description': 'Update the content filtering settings for an MX network', 'params': [{'name': 'allowedUrlPatterns', 'description': 'A whitelist of URL patterns to allow', 'is_array': True}, {'name': 'blockedUrlPatterns', 'description': 'A blacklist of URL patterns to block', 'is_array': True}, {'name': 'blockedUrlCategories', 'description': 'A list of URL categories to block', 'is_array': True}, {'name': 'urlCategoryListSize', 'description': "URL category list size which is either 'topSites' or 'fullList'", 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/firewalledServices', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices'", 'sample_resp': '[\n  {\n    "service": "web",\n    "access": "restricted",\n    "allowedIps": [\n      "123.123.123.1"\n    ]\n  }\n]', 'description': 'List the appliance services and their accessibility rules', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/firewalledServices/[service]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]'", 'sample_resp': '{\n  "service": "web",\n  "access": "restricted",\n  "allowedIps": [\n    "123.123.123.1"\n  ]\n}', 'description': "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')", 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/firewalledServices/[service]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"access":"restricted","allowedIps":["123.123.123.1"]}\' \'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]\'', 'sample_resp': '{\n  "service": "web",\n  "access": "restricted",\n  "allowedIps": [\n    "123.123.123.1"\n  ]\n}', 'description': "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')", 'params': [{'name': 'access', 'description': 'A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are "blocked" (no remote IPs can access the service), "restricted" (only whitelisted IPs can access the service), and "unrestriced" (any remote IP can access the service). This field is required', 'is_array': False}, {'name': 'allowedIps', 'description': 'An array of whitelisted IPs that can access the service. This field is required if "access" is set to "restricted". Otherwise this field is ignored', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/staticRoutes', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes'", 'sample_resp': '[\n  {\n    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",\n    "networkId": "N_24329156",\n    "name": "My route",\n    "gatewayIp": "1.2.3.5",\n    "subnet": "192.168.1.0/24",\n    "fixedIpAssignments": "{}",\n    "reservedIpRanges": "[]",\n    "enabled": true\n  }\n]', 'description': 'List the static routes for this network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/staticRoutes/[srId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'", 'sample_resp': '{\n  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",\n  "networkId": "N_24329156",\n  "name": "My route",\n  "gatewayIp": "1.2.3.5",\n  "subnet": "192.168.1.0/24",\n  "fixedIpAssignments": "{}",\n  "reservedIpRanges": "[]",\n  "enabled": true\n}', 'description': 'Return a static route', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/staticRoutes/[srId]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"name":"My route","subnet":"192.168.1.0/24","fixedIpAssignments":"{}","reservedIpRanges":"[]"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]\'', 'sample_resp': '{\n  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",\n  "networkId": "N_24329156",\n  "name": "My route",\n  "gatewayIp": "1.2.3.5",\n  "subnet": "192.168.1.0/24",\n  "fixedIpAssignments": "{}",\n  "reservedIpRanges": "[]",\n  "enabled": true\n}', 'description': 'Update a static route', 'params': [{'name': 'name', 'description': 'The name of the static route', 'is_array': False}, {'name': 'subnet', 'description': 'The subnet of the static route', 'is_array': False}, {'name': 'gatewayIp', 'description': 'The gateway IP (next hop) of the static route', 'is_array': False}, {'name': 'enabled', 'description': 'The enabled state of the static route', 'is_array': False}, {'name': 'fixedIpAssignments', 'description': 'The DHCP fixed IP assignments on the static route', 'is_array': False}, {'name': 'reservedIpRanges', 'description': 'The DHCP reserved IP ranges on the static route', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/staticRoutes', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"name":"My route","subnet":"192.168.1.0/24","gatewayIp":"1.2.3.5"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes\'', 'sample_resp': '{\n  "name": "My route",\n  "subnet": "192.168.1.0/24",\n  "gatewayIp": "1.2.3.5"\n}', 'description': 'Add a static route', 'params': [{'name': 'name', 'description': 'The name of the new static route', 'is_array': False}, {'name': 'subnet', 'description': 'The subnet of the static route', 'is_array': False}, {'name': 'gatewayIp', 'description': 'The gateway IP (next hop) of the static route', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/staticRoutes/[srId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'", 'sample_resp': '(empty)', 'description': 'Delete a static route from a network', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/uplinkSettings', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/uplinkSettings'", 'sample_resp': '{\n  "bandwidthLimits": {\n    "wan1": {\n      "limitUp": 1000000,\n      "limitDown": 1000000\n    },\n    "wan2": {\n      "limitUp": 1000000,\n      "limitDown": 1000000\n    },\n    "cellular": {\n      "limitUp": 51200,\n      "limitDown": 51200\n    }\n  }\n}', 'description': 'Returns the uplink settings for your MX network.', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/network/[networkId]/uplinkSettings', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"bandwidthLimits":{"wan1":{"limitUp":1000000,"limitDown":1000000},"wan2":{"limitUp":1000000,"limitDown":1000000},"cellular":{"limitUp":51200,"limitDown":51200}}}\' \'https://api.meraki.com/api/v0/network/[networkId]/uplinkSettings\'', 'sample_resp': '{\n  "bandwidthLimits": {\n    "wan1": {\n      "limitUp": 1000000,\n      "limitDown": 1000000\n    },\n    "wan2": {\n      "limitUp": 1000000,\n      "limitDown": 1000000\n    },\n    "cellular": {\n      "limitUp": 51200,\n      "limitDown": 51200\n    }\n  }\n}', 'description': 'Updates the uplink settings for your MX network.', 'params': [{'name': 'bandwidthLimits', 'description': 'A mapping of uplinks (wan1, wan2, and cellular) to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure', 'is_array': False, 'params': [{'name': 'limitUp', 'description': 'The maximum upload limit (integer, in Kbps). null indicates no limit', 'is_array': False}, {'name': 'limitDown', 'description': 'The maximum download limit (integer, in Kbps). null indicates no limit', 'is_array': False}]}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/vlans', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlans'", 'sample_resp': '[\n  {\n    "id": "1234",\n    "networkId": "N_24329156",\n    "name": "My VLAN",\n    "applianceIp": "1.2.3.4",\n    "subnet": "192.168.1.0/24",\n    "fixedIpAssignments": "{}",\n    "reservedIpRanges": "[]",\n    "dnsNameservers": "google_dns"\n  }\n]', 'description': 'List the VLANs for this network', 'params': None, 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/vlans/[vlanId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]'", 'sample_resp': '{\n  "id": "1234",\n  "networkId": "N_24329156",\n  "name": "My VLAN",\n  "applianceIp": "1.2.3.4",\n  "subnet": "192.168.1.0/24",\n  "fixedIpAssignments": "{}",\n  "reservedIpRanges": "[]",\n  "dnsNameservers": "google_dns"\n}', 'description': 'Return a VLAN', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/vlans/[vlanId]', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"id":"1234","networkId":"N_24329156","name":"My VLAN","applianceIp":"1.2.3.4","subnet":"192.168.1.0/24","fixedIpAssignments":"{}","reservedIpRanges":"[]","dnsNameservers":"google_dns"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]\'', 'sample_resp': '{\n  "id": "1234",\n  "networkId": "N_24329156",\n  "name": "My VLAN",\n  "applianceIp": "1.2.3.4",\n  "subnet": "192.168.1.0/24",\n  "fixedIpAssignments": "{}",\n  "reservedIpRanges": "[]",\n  "dnsNameservers": "google_dns"\n}', 'description': 'Update a VLAN', 'params': [{'name': 'name', 'description': 'The name of the VLAN', 'is_array': False}, {'name': 'subnet', 'description': 'The subnet of the VLAN', 'is_array': False}, {'name': 'applianceIp', 'description': 'The local IP of the appliance on the VLAN', 'is_array': False}, {'name': 'fixedIpAssignments', 'description': 'The DHCP fixed IP assignments on the VLAN', 'is_array': False}, {'name': 'reservedIpRanges', 'description': 'The DHCP reserved IP ranges on the VLAN', 'is_array': False}, {'name': 'vpnNatSubnet', 'description': 'The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN', 'is_array': False}, {'name': 'dnsNameservers', 'description': 'The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'POST', 'path': '/networks/[networkId]/vlans', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X POST --data-binary \'{"id":"1234","name":"My VLAN","subnet":"192.168.1.0/24","applianceIp":"1.2.3.4"}\' \'https://api.meraki.com/api/v0/networks/[networkId]/vlans\'', 'sample_resp': '{\n  "id": "1234",\n  "name": "My VLAN",\n  "subnet": "192.168.1.0/24",\n  "applianceIp": "1.2.3.4"\n}', 'description': 'Add a VLAN', 'params': [{'name': 'id', 'description': 'The VLAN ID of the new VLAN (must be between 1 and 4094)', 'is_array': False}, {'name': 'name', 'description': 'The name of the new VLAN', 'is_array': False}, {'name': 'subnet', 'description': 'The subnet of the VLAN', 'is_array': False}, {'name': 'applianceIp', 'description': 'The local IP of the appliance on the VLAN', 'is_array': False}], 'successful_http_status': 201},
{'http_method': 'DELETE', 'path': '/networks/[networkId]/vlans/[vlanId]', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]'", 'sample_resp': '(empty)', 'description': 'Delete a VLAN from a network', 'params': None, 'successful_http_status': 204},
{'http_method': 'GET', 'path': '/networks/[networkId]/vlansEnabledState', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlansEnabledState'", 'sample_resp': '{\n  "enabled": true,\n  "networkId": "N_24329156"\n}', 'description': 'Returns the enabled status of VLANs for the network', 'params': None, 'successful_http_status': 200},
{'http_method': 'PUT', 'path': '/networks/[networkId]/vlansEnabledState', 'alternate_path': None, 'sample_req': 'curl -L -H \'X-Cisco-Meraki-API-Key: <key>\' -H \'Content-Type: application/json\' -X PUT --data-binary \'{"enabled":true}\' \'https://api.meraki.com/api/v0/networks/[networkId]/vlansEnabledState\'', 'sample_resp': '{\n  "enabled": true,\n  "networkId": "N_24329156"\n}', 'description': 'Enable/Disable VLANs for the given network', 'params': [{'name': 'enabled', 'description': 'Boolean indicating whether to enable (true) or disable (false) VLANs for the network', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/connectionStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/connectionStats'", 'sample_resp': '{\n  "assoc": 1,\n  "auth": 5,\n  "dhcp": 0,\n  "dns": 0,\n  "success": 51\n}', 'description': 'Aggregated connectivity info for this network', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/connectionStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/connectionStats'", 'sample_resp': '[\n  {\n    "serial": "Q2JC-2MJM-FHRD",\n    "connectionStats": {\n      "assoc": 0,\n      "auth": 1,\n      "dhcp": 0,\n      "dns": 0,\n      "success": 43\n    }\n  },\n  {\n    "serial": "Q2FJ-3SHB-Y2K2",\n    "connectionStats": {\n      "assoc": 1,\n      "auth": 4,\n      "dhcp": 0,\n      "dns": 0,\n      "success": 8\n    }\n  }\n]', 'description': 'Aggregated connectivity info for this network, grouped by node', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]/connectionStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/connectionStats'", 'sample_resp': '{\n  "serial": "Q2JC-2MJM-FHRD",\n  "connectionStats": {\n    "assoc": 0,\n    "auth": 1,\n    "dhcp": 0,\n    "dns": 0,\n    "success": 43\n  }\n}', 'description': 'Aggregated connectivity info for a given AP on this network', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/connectionStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/connectionStats'", 'sample_resp': '[\n  {\n    "mac": "00:61:71:c8:51:27",\n    "connectionStats": {\n      "assoc": 0,\n      "auth": 4,\n      "dhcp": 0,\n      "dns": 0,\n      "success": 10\n    }\n  },\n  {\n    "mac": "1c:4d:70:7f:5e:5e",\n    "connectionStats": {\n      "assoc": 0,\n      "auth": 1,\n      "dhcp": 0,\n      "dns": 0,\n      "success": 24\n    }\n  },\n  {\n    "mac": "1c:4d:70:81:8d:0a",\n    "connectionStats": {\n      "assoc": 1,\n      "auth": 0,\n      "dhcp": 0,\n      "dns": 0,\n      "success": 16\n    }\n  }\n]', 'description': 'Aggregated connectivity info for this network, grouped by clients', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/[clientId]/connectionStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/connectionStats'", 'sample_resp': '{\n  "mac": "00:61:71:c8:51:27",\n  "connectionStats": {\n    "assoc": 0,\n    "auth": 4,\n    "dhcp": 0,\n    "dns": 0,\n    "success": 10\n  }\n}', 'description': 'Aggregated connectivity info for a given client on this network', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/latencyStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/latencyStats'", 'sample_resp': '{\n  "backgroundTraffic": {\n    "rawDistribution": {\n      "0": 1234,\n      "1": 2345,\n      "2": 3456,\n      "4": 4567,\n      "8": 5678,\n      "16": 6789,\n      "32": 7890,\n      "64": 8901,\n      "128": 9012,\n      "256": 83,\n      "512": 1234,\n      "1024": 2345,\n      "2048": 9999\n    },\n    "avg": 606.52\n  },\n  "bestEffortTraffic": "same shape as backgroundTraffic",\n  "videoTraffic": "same shape as backgroundTraffic",\n  "voiceTraffic": "same shape as backgroundTraffic"\n}', 'description': 'Aggregated latency info for this network', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}, {'name': 'fields', 'description': 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/latencyStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/latencyStats'", 'sample_resp': '[\n  {\n    "serial": "Q2JC-2MJM-FHRD",\n    "latencyStats": {\n      "backgroundTraffic": {\n        "rawDistribution": {\n          "0": 1234,\n          "1": 2345,\n          "2": 3456,\n          "4": 4567,\n          "8": 5678,\n          "16": 6789,\n          "32": 7890,\n          "64": 8901,\n          "128": 9012,\n          "256": 83,\n          "512": 1234,\n          "1024": 2345,\n          "2048": 9999\n        },\n        "avg": 606.52\n      },\n      "bestEffortTraffic": "same shape as backgroundTraffic",\n      "videoTraffic": "same shape as backgroundTraffic",\n      "voiceTraffic": "same shape as backgroundTraffic"\n    }\n  },\n  {\n    "serial": "Q2FJ-3SHB-Y2K2",\n    "latencyStats": {\n      "backgroundTraffic": {\n        "rawDistribution": {\n          "0": 1234,\n          "1": 2345,\n          "2": 3456,\n          "4": 4567,\n          "8": 5678,\n          "16": 6789,\n          "32": 7890,\n          "64": 8901,\n          "128": 9012,\n          "256": 83,\n          "512": 1234,\n          "1024": 2345,\n          "2048": 9999\n        },\n        "avg": 606.52\n      },\n      "bestEffortTraffic": "same shape as backgroundTraffic",\n      "videoTraffic": "same shape as backgroundTraffic",\n      "voiceTraffic": "same shape as backgroundTraffic"\n    }\n  }\n]', 'description': 'Aggregated latency info for this network, grouped by node', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}, {'name': 'fields', 'description': 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/devices/[serial]/latencyStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/latencyStats'", 'sample_resp': '{\n  "serial": "Q2JC-2MJM-FHRD",\n  "latencyStats": {\n    "backgroundTraffic": {\n      "rawDistribution": {\n        "0": 1234,\n        "1": 2345,\n        "2": 3456,\n        "4": 4567,\n        "8": 5678,\n        "16": 6789,\n        "32": 7890,\n        "64": 8901,\n        "128": 9012,\n        "256": 83,\n        "512": 1234,\n        "1024": 2345,\n        "2048": 9999\n      },\n      "avg": 606.52\n    },\n    "bestEffortTraffic": "same shape as backgroundTraffic",\n    "videoTraffic": "same shape as backgroundTraffic",\n    "voiceTraffic": "same shape as backgroundTraffic"\n  }\n}', 'description': 'Aggregated latency info for a given AP on this network', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}, {'name': 'fields', 'description': 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.', 'is_array': False}], 'successful_http_status': 200},
{'http_method': 'GET', 'path': '/networks/[networkId]/clients/latencyStats', 'alternate_path': None, 'sample_req': "curl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/latencyStats'", 'sample_resp': '[\n  {\n    "mac": "00:61:71:c8:51:27",\n    "latencyStats": {\n      "backgroundTraffic": {\n        "rawDistribution": {\n          "0": 1234,\n          "1": 2345,\n          "2": 3456,\n          "4": 4567,\n          "8": 5678,\n          "16": 6789,\n          "32": 7890,\n          "64": 8901,\n          "128": 9012,\n          "256": 83,\n          "512": 1234,\n          "1024": 2345,\n          "2048": 9999\n        },\n        "avg": 606.52\n      },\n      "bestEffortTraffic": "same shape as backgroundTraffic",\n      "videoTraffic": "same shape as backgroundTraffic",\n      "voiceTraffic": "same shape as backgroundTraffic"\n    }\n  },\n  {\n    "mac": "1c:4d:70:7f:5e:5e",\n    "latencyStats": {\n      "backgroundTraffic": {\n        "rawDistribution": {\n          "0": 1234,\n          "1": 2345,\n          "2": 3456,\n          "4": 4567,\n          "8": 5678,\n          "16": 6789,\n          "32": 7890,\n          "64": 8901,\n          "128": 9012,\n          "256": 83,\n          "512": 1234,\n          "1024": 2345,\n          "2048": 9999\n        },\n        "avg": 606.52\n      },\n      "bestEffortTraffic": "same shape as backgroundTraffic",\n      "videoTraffic": "same shape as backgroundTraffic",\n      "voiceTraffic": "same shape as backgroundTraffic"\n    }\n  },\n  {\n    "mac": "1c:4d:70:81:8d:0a",\n    "latencyStats": {\n      "backgroundTraffic": {\n        "rawDistribution": {\n          "0": 1234,\n          "1": 2345,\n          "2": 3456,\n          "4": 4567,\n          "8": 5678,\n          "16": 6789,\n          "32": 7890,\n          "64": 8901,\n          "128": 9012,\n          "256": 83,\n          "512": 1234,\n          "1024": 2345,\n          "2048": 9999\n        },\n        "avg": 606.52\n      },\n      "bestEffortTraffic": "same shape as backgroundTraffic",\n      "videoTraffic": "same shape as backgroundTraffic",\n      "voiceTraffic": "same shape as backgroundTraffic"\n    }\n  }\n]', 'description': 'Aggregated latency info for this network, grouped by clients', 'params': [{'name': 't0', 'description': 'Start of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 't1', 'description': 'End of the requested time range in seconds since epoch (Required)', 'is_array': False}, {'name': 'ssid', 'description': 'Filter results by SSID', 'is_array': False}, {'name': 'vlan', 'description': 'Filter results by VLAN', 'is_array': False}, {'name': 'fields', 'description': 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.', 'is_array': False}], 'successful_http_status': 200}]